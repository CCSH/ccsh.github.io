<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Flutter 拓展之GlobalKey</title>
    <url>/2019/12/26/Flutter%20%E6%8B%93%E5%B1%95%E4%B9%8BGlobalKey/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//  @Description: GlobalKey拓展</span><br><span class="line">//  @Author: 陈胜辉</span><br><span class="line">//  @Date: 2019-12-26 15:37:34</span><br><span class="line">//  @Version: 版本号, YYYY-MM-DD</span><br><span class="line">//  @LastEditors: 陈胜辉</span><br><span class="line">//  @LastEditTime: 2019-12-26 16:07:28</span><br><span class="line">//  @Deprecated: 否</span><br><span class="line">//  备注</span><br><span class="line">import &apos;package:flutter/material.dart&apos;;</span><br><span class="line"></span><br><span class="line">extension SHExtension on GlobalKey &#123;</span><br><span class="line">  static Offset offset = Offset.zero;</span><br><span class="line"></span><br><span class="line">  void setOffset(Offset off) &#123;</span><br><span class="line">    offset = off;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  RenderBox _render() &#123;</span><br><span class="line">    if (this.currentContext != null) &#123;</span><br><span class="line">      return this.currentContext.findRenderObject();</span><br><span class="line">    &#125;</span><br><span class="line">    return null;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  double x() &#123;</span><br><span class="line">    return this.origin().dx;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  double y() &#123;</span><br><span class="line">    return this.origin().dy;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  double width() &#123;</span><br><span class="line">    return this.size().width;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  double height() &#123;</span><br><span class="line">    return this.size().height;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Offset origin() &#123;</span><br><span class="line">    return this._render().localToGlobal(offset);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Size size() &#123;</span><br><span class="line">    return this._render().size;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  double maxX() &#123;</span><br><span class="line">    return this.x() + this.width();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  double maxY() &#123;</span><br><span class="line">    return this.y() + this.height();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  double centerX() &#123;</span><br><span class="line">    return this.x() + (this.width() / 2);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  double centerY() &#123;</span><br><span class="line">    return this.y() + (this.height() / 2);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>拓展方法</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 拓展之Color</title>
    <url>/2019/12/26/Flutter%20%E6%8B%93%E5%B1%95%E4%B9%8BColor/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//  @Description: Color拓展</span><br><span class="line">//  @Author: 陈胜辉</span><br><span class="line">//  @Date: 2019-12-18 09:54:38</span><br><span class="line">//  @Version: 版本号, YYYY-MM-DD</span><br><span class="line">//  @LastEditors: 陈胜辉</span><br><span class="line">//  @LastEditTime: 2019-12-18 13:06:53</span><br><span class="line">//  @Deprecated: 否</span><br><span class="line">//  备注</span><br><span class="line">import &apos;package:flutter/material.dart&apos;;</span><br><span class="line"></span><br><span class="line">extension SHExtension on Color &#123;</span><br><span class="line">  //color 转 16进制string</span><br><span class="line">  String toHex() &#123;</span><br><span class="line">    List temp = [this.alpha, this.red, this.green, this.blue];</span><br><span class="line">    String color = &apos;#&apos;;</span><br><span class="line">    for (var obj in temp) &#123;</span><br><span class="line">      String str = obj.toRadixString(16);</span><br><span class="line">      color += str;</span><br><span class="line">    &#125;</span><br><span class="line">    return color.toUpperCase();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>拓展方法</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 拓展之String</title>
    <url>/2019/12/26/Flutter%20%E6%8B%93%E5%B1%95%E4%B9%8BString/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//  @Description: String拓展</span><br><span class="line">//  @Author: 陈胜辉</span><br><span class="line">//  @Date: 2019-12-18 09:52:25</span><br><span class="line">//  @Version: 版本号, YYYY-MM-DD</span><br><span class="line">//  @LastEditors: 陈胜辉</span><br><span class="line">//  @LastEditTime: 2019-12-18 13:06:42</span><br><span class="line">//  @Deprecated: 否</span><br><span class="line">//  备注</span><br><span class="line">import &apos;dart:convert&apos;;</span><br><span class="line">import &apos;package:crypto/crypto.dart&apos;;</span><br><span class="line">import &apos;package:flutter/material.dart&apos;;</span><br><span class="line"></span><br><span class="line">final String regexEmail = &apos;[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]&#123;2,4&#125;&apos;;</span><br><span class="line"></span><br><span class="line">extension SHExtension on String &#123;</span><br><span class="line">  ///  16进制string 转 color</span><br><span class="line">  Color toColor() &#123;</span><br><span class="line">    String hex = this.replaceAll(&apos;#&apos;, &apos;&apos;);</span><br><span class="line">    int count = 0;</span><br><span class="line">    switch (hex.length) &#123;</span><br><span class="line">      case 3: // #RGB</span><br><span class="line">      case 4: // #ARGB</span><br><span class="line">        count = 1;</span><br><span class="line">        break;</span><br><span class="line">      case 6: // #RRGGBB</span><br><span class="line">      case 8: // #AARRGGBB</span><br><span class="line">        count = 2;</span><br><span class="line">        break;</span><br><span class="line">      default: // 默认颜色</span><br><span class="line">        return Colors.transparent;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List temp = [];</span><br><span class="line">    for (int i = 0; i &lt; hex.length; i += count) &#123;</span><br><span class="line">      String str = hex.substring(i, i + count);</span><br><span class="line">      temp.add(int.parse(str, radix: 16));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (temp.length == 3) &#123;</span><br><span class="line">      temp.insert(0, 255);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return Color.fromRGBO(temp[1], temp[2], temp[3], temp[0] / 255.0);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// MD5加密</span><br><span class="line">  String getMD5() &#123;</span><br><span class="line">    var content = Utf8Encoder().convert(this);</span><br><span class="line">    var digest = md5.convert(content);</span><br><span class="line">    return digest.toString();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// 判断是否是邮箱</span><br><span class="line">  bool isEmail() &#123;</span><br><span class="line">    return RegExp(regexEmail).hasMatch(this);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// string 转 int</span><br><span class="line">  int toInt() &#123;</span><br><span class="line">    return int.parse(this);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// string 转 double</span><br><span class="line">  double toDouble() &#123;</span><br><span class="line">    return double.parse(this);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// string 转bool</span><br><span class="line">  // (字符串 不等于&apos;true&apos; 不大于0 等于空时 返回false 否则返回true)</span><br><span class="line">  bool toBool() &#123;</span><br><span class="line">    if (this.toLowerCase() == &quot;true&quot; ||</span><br><span class="line">        this.toInt() &gt; 0 ||</span><br><span class="line">        this.toDouble() &gt; 0 ||</span><br><span class="line">        this.trim() != &apos;&apos; ||</span><br><span class="line">        this != &apos;&apos;) &#123;</span><br><span class="line">      return true;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// 编码</span><br><span class="line">  String toCoding() &#123;</span><br><span class="line">    String str = this.toString();</span><br><span class="line">    // 对字符串进行编码</span><br><span class="line">    return jsonEncode(Utf8Encoder().convert(str));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// 解码</span><br><span class="line">  String toDeCoding() &#123;</span><br><span class="line">    var list = List&lt;int&gt;();</span><br><span class="line"></span><br><span class="line">    // 字符串解码</span><br><span class="line">    jsonDecode(this).forEach(list.add);</span><br><span class="line">    String value = Utf8Decoder().convert(list);</span><br><span class="line">    return value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>拓展方法</tag>
      </tags>
  </entry>
  <entry>
    <title>安装ruby</title>
    <url>/2019/12/26/%E5%AE%89%E8%A3%85ruby/</url>
    <content><![CDATA[<p>curl -sSL <a href="https://get.rvm.io" target="_blank" rel="noopener">https://get.rvm.io</a> | bash -s stable</p>
<p>source ~/.rvm/scripts/rvm</p>
<p>rvm -v</p>
<p>rvm install 2.6</p>
<p>rvm use ruby-2.6.3 –default</p>
<p>ruby -e “$(curl -fsSL <a href="https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;" target="_blank" rel="noopener">https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</a></p>
]]></content>
      <categories>
        <category>ruby</category>
      </categories>
      <tags>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title>清理Xcode编译项目产生的缓存垃圾</title>
    <url>/2019/12/26/%E6%B8%85%E7%90%86Xcode%E7%BC%96%E8%AF%91%E9%A1%B9%E7%9B%AE%E4%BA%A7%E7%94%9F%E7%9A%84%E7%BC%93%E5%AD%98%E5%9E%83%E5%9C%BE/</url>
    <content><![CDATA[<a id="more"></a>
<p>rm ~/Library/Developer/Xcode/DerivedData</p>
]]></content>
      <categories>
        <category>Xcode</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>［转］XMPP协议及其扩展详解</title>
    <url>/2019/12/26/%EF%BC%BB%E8%BD%AC%EF%BC%BDXMPP%E5%8D%8F%E8%AE%AE%E5%8F%8A%E5%85%B6%E6%89%A9%E5%B1%95%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<!-- more ---
title: ［转］XMPP协议及其扩展详解
categories:
  - 转载
tags:
  - XMPP
comments: true
---


<a id="more"></a>
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html---" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html---</a><br>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<h2 id="XEP-0009-Jabber-RPC-http-www-xmpp-org-extensions-xep-0009-html"><a href="#XEP-0009-Jabber-RPC-http-www-xmpp-org-extensions-xep-0009-html" class="headerlink" title="XEP-0009 Jabber-RPC http://www.xmpp.org/extensions/xep-0009.html"></a>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></h2><p>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html---" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html---</a><br>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html---" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html---</a><br>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html---" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html---</a><br>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html---" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html---</a><br>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html---" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html---</a><br>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html---" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html---</a><br>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html---" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html---</a><br>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html---" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html---</a><br>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html---" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html---</a><br>title: ［转］XMPP协议及其扩展详解<br>categories:</p>
<ul>
<li>转载<br>tags:</li>
<li>XMPP<br>comments: true</li>
</ul>
<hr>
<!-- more -->
<p><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html</a><br>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html--&gt;" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html--&gt;</a><br><a href="http://www.cppblog.com/peakflys/articles/198338.html" target="_blank" rel="noopener">原文</a></p>
<p>基本的jabber客户端必须实现以下标准协议（XEP-0211）</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>4、XEP-0115 Entity Capabilities <a href="http://www.xmpp.org/extensions/xep-0115.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0115.html</a></p>
<p>基本的jabber服务器必须实现以下标准协议(XEP-0212)</p>
<p>1、RFC3920 Core <a href="http://tools.ietf.org/html/rfc3920" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3920</a></p>
<p>2、RFC3921 Instant Messaging and Presence <a href="http://tools.ietf.org/html/rfc3921" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3921</a></p>
<p>3、XEP-030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>一、注册</p>
<p>XEP-0077 In-Band Registration <a href="http://www.xmpp.org/extensions/xep-0077.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0077.html</a></p>
<p>二、登录</p>
<p>XEP-0020 Software Version <a href="http://www.xmpp.org/extensions/xep-0092.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0092.html</a></p>
<p>三、好友列表</p>
<p>XEP-0083 Nested Roster Groups <a href="http://www.xmpp.org/extensions/xep-0083.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0083.html</a></p>
<p>1、获取好友列表</p>
<p>2、存储好友列表</p>
<p>XEP-0049 Private XML Storage <a href="http://www.xmpp.org/extensions/xep-0049.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0049.html</a></p>
<p>3、备注好友信息</p>
<p>XEP-0145 Annotations <a href="http://www.xmpp.org/extensions/xep-0145.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0145.html</a></p>
<p>4、存储书签</p>
<p>XEP-0048 Bookmark Storage <a href="http://www.xmpp.org/extensions/xep-0048.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0048.html</a></p>
<p>5、好友头像</p>
<p>XEP-0008 IQ-Based Avatars <a href="http://www.xmpp.org/extensions/xep-0008.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0008.html</a></p>
<p>XEP-0084 User Avatar <a href="http://www.xmpp.org/extensions/xep-0084.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0084.html</a></p>
<p>XEP-0054 vcard-temp <a href="http://www.xmpp.org/extensions/xep-0054.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0054.html</a></p>
<p>四、用户状态</p>
<p>RFC-3921 Subscription States <a href="http://www.ietf.org/rfc/rfc3921.txt" target="_blank" rel="noopener">http://www.ietf.org/rfc/rfc3921.txt</a></p>
<p>五、文本消息</p>
<p>1、在线消息</p>
<p>2、离线消息</p>
<p>XEP-0013 Flexible Offline Message Retrieval <a href="http://www.xmpp.org/extensions/xep-0013.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0013.html</a></p>
<p>XEP-0160 Best Practices for Handling Offline Messages <a href="http://www.xmpp.org/extensions/xep-0160.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0160.html</a></p>
<p>XEP-0203 Delayed Delivery <a href="http://www.xmpp.org/extensions/xep-0203.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0203.html</a></p>
<p>3、聊天状态通知</p>
<p>XEP-0085 Chat State Notifications <a href="http://www.xmpp.org/extensions/xep-0085.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0085.html</a></p>
<p>六、群组聊天</p>
<p>1、XEP-0045 Multi-User Chat <a href="http://www.xmpp.org/extensions/xep-0045.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0045.html</a></p>
<p>七、文件传输</p>
<p>1、XEP-0095 Stream Initiation <a href="http://www.xmpp.org/extensions/xep-0095.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0095.html</a></p>
<p>2、XEP-0096 File Transfer <a href="http://www.xmpp.org/extensions/xep-0096.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0096.html</a></p>
<p>3、XEP-0065 SOCKS5 Bytestreams <a href="http://www.xmpp.org/extensions/xep-0065.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0065.html</a></p>
<p>4、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>5、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>八、音视频会议</p>
<p>1、XEP-0166 Jingle <a href="http://www.xmpp.org/extensions/xep-0166.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0166.html#negotiation</a></p>
<p>2、XEP-0167 Jingle Audio via RTP <a href="http://www.xmpp.org/extensions/xep-0167.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0167.html</a></p>
<p>3、XEP-0176 Jingle ICE Transport <a href="http://www.xmpp.org/extensions/xep-0176.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0176.html</a></p>
<p>4、XEP-0180 Jingle Video via RTP <a href="http://www.xmpp.org/extensions/xep-0180.html#negotiation" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0180.html#negotiation</a></p>
<p>5、XEP-0215 STUN Server Discovery for Jingle <a href="http://www.xmpp.org/extensions/xep-0215.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0215.html</a></p>
<p>6、RFC-3489 STUN <a href="http://tools.ietf.org/html/rfc3489" target="_blank" rel="noopener">http://tools.ietf.org/html/rfc3489</a></p>
<p>九、用户查询</p>
<p>XEP-0055 Jabber Search <a href="http://www.xmpp.org/extensions/xep-0055.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0055.html</a></p>
<p>十、用户保活 (peakflys增加)</p>
<p>XEP-0199 Ping <a href="http://xmpp.org/extensions/xep-0199.html" target="_blank" rel="noopener">http://xmpp.org/extensions/xep-0199.html</a></p>
<p>整体：</p>
<p>一、协议数据交互</p>
<p>XEP-0004 Data Forms <a href="http://www.xmpp.org/extensions/xep-0004.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0004.html</a></p>
<p>二、jabber-RPC</p>
<p>XEP-0009 Jabber-RPC <a href="http://www.xmpp.org/extensions/xep-0009.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0009.html</a></p>
<p>三、功能协商</p>
<p>XEP-0020 Feature Negotiation <a href="http://www.xmpp.org/extensions/xep-0020.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0020.html</a></p>
<p>四、服务发现</p>
<p>XEP-0030 Service Discovery <a href="http://www.xmpp.org/extensions/xep-0030.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0030.html</a></p>
<p>五、会话建立</p>
<p>XEP-0116 Encrypted Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0116.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0116.html</a></p>
<p>XEP-0155 Stanza Session Negotiation <a href="http://www.xmpp.org/extensions/xep-0155.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0155.html</a></p>
<p>XEP-0201 Best Practices for Message Threads <a href="http://www.xmpp.org/extensions/xep-0201.html" target="_blank" rel="noopener">http://www.xmpp.org/extensions/xep-0201.html</a></p>
]]></content>
      <categories>
        <category>转载</category>
      </categories>
      <tags>
        <tag>XMPP</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 视图抖动</title>
    <url>/2019/12/26/iOS%20%E8%A7%86%E5%9B%BE%E6%8A%96%E5%8A%A8/</url>
    <content><![CDATA[<p>iOS 视图抖动</p>
<a id="more"></a>
<p>.h</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> 添加抖动动画</span><br><span class="line"> </span><br><span class="line"> @param view 添加的视图</span><br><span class="line"> */</span><br><span class="line">+ (void)addAnimationShakeWithView:(UIView *)view;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 移除抖动动画</span><br><span class="line"></span><br><span class="line"> @param view 移除的视图</span><br><span class="line"> */</span><br><span class="line">+ (void)removeAnimationShakeWithView:(UIView *)view;</span><br></pre></td></tr></table></figure>

<p>.m</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define kShakingRadian(R) ((R) / 180.0 * M_PI)</span><br><span class="line"></span><br><span class="line">@implementation SHAnimation</span><br><span class="line"></span><br><span class="line">#pragma mark - 添加抖动动画</span><br><span class="line">+ (void)addAnimationShakeWithView:(UIView *)view&#123;</span><br><span class="line">    </span><br><span class="line">    CAKeyframeAnimation *animation = [CAKeyframeAnimation animation];</span><br><span class="line">    </span><br><span class="line">    animation.keyPath = @&quot;transform.rotation&quot;;</span><br><span class="line">    </span><br><span class="line">    animation.values = @[@(kShakingRadian(-5)),  @(kShakingRadian(5)), @(kShakingRadian(-5))];</span><br><span class="line">    </span><br><span class="line">    animation.duration = 0.25;</span><br><span class="line">    </span><br><span class="line">    // 动画的重复执行次数</span><br><span class="line">    animation.repeatCount = MAXFLOAT;</span><br><span class="line">    </span><br><span class="line">    // 保持动画执行完毕后的状态</span><br><span class="line">    animation.removedOnCompletion = NO;</span><br><span class="line">    </span><br><span class="line">    animation.fillMode = kCAFillModeForwards;</span><br><span class="line">    </span><br><span class="line">    [view.layer addAnimation:animation forKey:@&quot;sh_animation_shake&quot;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 移除抖动动画</span><br><span class="line">+ (void)removeAnimationShakeWithView:(UIView *)view&#123;</span><br><span class="line">    </span><br><span class="line">    //结束动画</span><br><span class="line">    [view.layer removeAnimationForKey:@&quot;sh_animation_shake&quot;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 跑马灯，弹幕，滚动文字效果实现</title>
    <url>/2019/12/26/iOS%20%E8%B7%91%E9%A9%AC%E7%81%AF%EF%BC%8C%E5%BC%B9%E5%B9%95%EF%BC%8C%E6%BB%9A%E5%8A%A8%E6%96%87%E5%AD%97%E6%95%88%E6%9E%9C%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<p>跑马灯，弹幕，滚动文字效果实现</p>
<a id="more"></a>
<p>跟视图设置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">self.backVIew.clipsToBounds = YES;</span><br></pre></td></tr></table></figure>

<p>建立定时器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[NSTimer scheduledTimerWithTimeInterval:0.1 target:self selector:@selector(labelRoll) userInfo:nil repeats:YES];</span><br></pre></td></tr></table></figure>

<p>跑起来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void) labelRoll</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  </span><br><span class="line">  CGPoint labelCenter = self.label.center;</span><br><span class="line"></span><br><span class="line">  // 当控件的x坐标已经超过了视图的宽度</span><br><span class="line"></span><br><span class="line">  if(labelCenter.x  &lt;  self.backVIew.frame.origin.x-self.label.frame.size.width)&#123;</span><br><span class="line"></span><br><span class="line">  // 控制控件自视图右侧开始移动</span><br><span class="line"></span><br><span class="line">  self.customLab.center = CGPointMake(self.backVIew.frame.size.width+self.label.frame.size.width/2, labelCenter.y);</span><br><span class="line"></span><br><span class="line">  &#125;else&#123;</span><br><span class="line"></span><br><span class="line">  // 控制控件移动中(微调)</span><br><span class="line"></span><br><span class="line">  self.label.customLab.center = CGPointMake(labelCenter.x-5, labelCenter.y);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 键盘监听处理遮挡控件问题</title>
    <url>/2019/12/26/iOS%20%E9%94%AE%E7%9B%98%E7%9B%91%E5%90%AC%E5%A4%84%E7%90%86%E9%81%AE%E6%8C%A1%E6%8E%A7%E4%BB%B6%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>键盘监听处理遮挡控件问题</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - 键盘处理</span><br><span class="line">#pragma mark 监听系统发出的键盘通知</span><br><span class="line">- (void)addKeyboardNote &#123;</span><br><span class="line"></span><br><span class="line">    NSNotificationCenter *center = [NSNotificationCenter defaultCenter];</span><br><span class="line">    </span><br><span class="line">    // 1.显示键盘</span><br><span class="line">    [center addObserver:self selector:@selector(keyboardChange:) name:UIKeyboardWillShowNotification object:nil];</span><br><span class="line">    </span><br><span class="line">    // 2.隐藏键盘</span><br><span class="line">    [center addObserver:self selector:@selector(keyboardChange:) name:UIKeyboardWillHideNotification object:nil];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>处理方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)keyboardChange:(NSNotification *)note &#123;</span><br><span class="line">    </span><br><span class="line">    NSDictionary *userInfo = note.userInfo;</span><br><span class="line">    NSTimeInterval duration;</span><br><span class="line">    CGRect keyboardF;</span><br><span class="line">    </span><br><span class="line">    [[userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey] getValue:&amp;duration];</span><br><span class="line">    [[userInfo objectForKey:UIKeyboardFrameEndUserInfoKey] getValue:&amp;keyboardF];</span><br><span class="line">    </span><br><span class="line">    if (duration &lt;= 0.0) &#123;</span><br><span class="line">        duration = 0.25;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //取得当前聚焦文本框最下面的Y值</span><br><span class="line">    UITextField *field = [self.view viewWithTag:1];</span><br><span class="line">    CGFloat maxY = CGRectGetMaxY(field.frame) + 5;</span><br><span class="line">    </span><br><span class="line">    [UIView animateWithDuration:duration animations:^&#123;</span><br><span class="line">        if (maxY &gt;  CGRectGetMidY(keyboardF)) &#123; //挡住了</span><br><span class="line">            self.view.transform = CGAffineTransformMakeTranslation(0, - (maxY - CGRectGetMidY(keyboardF) ));</span><br><span class="line">        &#125; else &#123; // 没有挡住</span><br><span class="line">            self.view.transform = CGAffineTransformIdentity;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>销毁处理</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)dealloc &#123;</span><br><span class="line">    [[NSNotificationCenter defaultCenter] removeObserver:self];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>使用CocoaPods找不到头文件解决方法</title>
    <url>/2019/12/26/%E4%BD%BF%E7%94%A8CocoaPods%E6%89%BE%E4%B8%8D%E5%88%B0%E5%A4%B4%E6%96%87%E4%BB%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<a id="more"></a>
<p>使用CocoaPods后,发现总是找不到头文件</p>
<p>在TARGETS -&gt; Search Paths -&gt; User Header Search Paths 中 写入 ${SRCROOT} 再将后面参数改为recursive</p>
]]></content>
      <categories>
        <category>CocoaPods</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>删除Xcode中多余的证书provisioning profile</title>
    <url>/2019/12/26/%E5%88%A0%E9%99%A4Xcode%E4%B8%AD%E5%A4%9A%E4%BD%99%E7%9A%84%E8%AF%81%E4%B9%A6provisioning%20profile/</url>
    <content><![CDATA[<a id="more"></a>
<p>rm ~/Library/MobileDevice/Provisioning Profiles</p>
]]></content>
      <categories>
        <category>Xcode</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>如何获取ios系统信息</title>
    <url>/2019/12/26/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96ios%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<p>如何获取ios系统信息</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSString *deviceID  =  [[UIDevice currentDevice] uniqueIdentifier];//设备id</span><br><span class="line"></span><br><span class="line">// NSString *deviceID  =  [[UIApplication sharedApplication] uuid];</span><br><span class="line"></span><br><span class="line">NSString *systemVersion  =  [[UIDevice currentDevice] systemVersion];//系统版本</span><br><span class="line"></span><br><span class="line">NSString *systemModel    =  [[UIDevice currentDevice] model];//是iphone 还是 ipad</span><br><span class="line"></span><br><span class="line">NSDictionary *dic    =  [[NSBundle mainBundle] infoDictionary];//获取info－plist</span><br><span class="line"></span><br><span class="line">NSString *appName  =  [dic objectForKey:@&quot;CFBundleIdentifier&quot;];//获取Bundle identifier</span><br><span class="line"></span><br><span class="line">NSString *appVersion  =  [dic valueForKey:@&quot;CFBundleVersion&quot;];//获取Bundle Version</span><br><span class="line"></span><br><span class="line">NSDictionary *userInfo = [[NSDictionary alloc] initWithObjectsAndKeys:</span><br><span class="line"></span><br><span class="line">deviceID, @&quot;deviceID&quot;,</span><br><span class="line"></span><br><span class="line">systemVersion, @&quot;systemVersion&quot;,</span><br><span class="line"></span><br><span class="line">systemModel, @&quot;systemModel&quot;,</span><br><span class="line"></span><br><span class="line">appName, @&quot;appName&quot;,</span><br><span class="line"></span><br><span class="line">appVersion, @&quot;appVersion&quot;,nil];</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 收藏一些好用的Demo与工具类(持续更新)</title>
    <url>/2019/12/26/iOS%20%E6%94%B6%E8%97%8F%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%94%A8%E7%9A%84Demo%E4%B8%8E%E5%B7%A5%E5%85%B7%E7%B1%BB(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0)/</url>
    <content><![CDATA[<a id="more"></a>
<p>1、访问照片、相机、图片多选等</p>
<p><a href="https://github.com/MakeZL/ZLPhotoLib" target="_blank" rel="noopener">标准的多选</a></p>
<p><a href="https://github.com/DaMingShen/SuPhotoPicker" target="_blank" rel="noopener">类似于QQ的多选</a></p>
<p>2、网络数据请求（网络判断）</p>
<p><a href="https://github.com/AFNetworking/AFNetworking" target="_blank" rel="noopener">地址</a></p>
<p>3、图片加载</p>
<p><a href="https://github.com/rs/SDWebImage" target="_blank" rel="noopener">地址</a></p>
<p>4、数据模型转换</p>
<p><a href="https://github.com/CoderMJLee/MJExtension" target="_blank" rel="noopener">地址</a></p>
<p>5、刷新加载</p>
<p><a href="https://github.com/CoderMJLee/MJRefresh" target="_blank" rel="noopener">地址</a></p>
<p>6、即时通讯</p>
<p><a href="https://github.com/robbiehanson/XMPPFramework" target="_blank" rel="noopener">地址</a></p>
<p>7、提示框</p>
<p><a href="https://github.com/jdg/MBProgressHUD" target="_blank" rel="noopener">地址</a></p>
<p>8、数据存储</p>
<p><a href="https://github.com/ccgus/fmdb" target="_blank" rel="noopener">地址</a></p>
<p>9、滑动返回（不需要系统POP）</p>
<p><a href="https://github.com/forkingdog/FDFullscreenPopGesture" target="_blank" rel="noopener">地址</a></p>
<p>10、音频转换 AMR&lt;—-&gt;WAV（安卓与iOS语音互聊）</p>
<p><a href="https://github.com/AwakenDragon/VoiceConvert" target="_blank" rel="noopener">地址</a></p>
<p>11、视频播放器</p>
<p><a href="https://github.com/renzifeng/ZFPlayer" target="_blank" rel="noopener">支持单元格播放，断点下载等</a></p>
<p><a href="https://github.com/0summer0/VideoPlayerDemo" target="_blank" rel="noopener">支持横竖屏旋转(90°&amp;&amp;180°)，音量、亮度调节，左侧为亮度调节，右侧为音量调节，以及快进快退、加载进度(非缓存）</a></p>
<p>12、网易新闻类</p>
<p><a href="https://github.com/iDvel/DDNews" target="_blank" rel="noopener">地址</a></p>
<p>13、弹幕</p>
<p><a href="https://github.com/unash/BarrageRenderer" target="_blank" rel="noopener">地址</a></p>
<p>14、今日头条，网易新闻 标签页编辑页面</p>
<p><a href="https://github.com/codeWorm2015/channelEdit" target="_blank" rel="noopener">地址</a></p>
<p>15、其他小玩意</p>
<p><a href="https://github.com/Naruto-yq/AnimationDemoOne" target="_blank" rel="noopener">表白程序员</a></p>
<p>16、UIWebView页面信息的离线缓存</p>
<p><a href="https://github.com/rnapier/RNCachingURLProtocol" target="_blank" rel="noopener">地址</a></p>
<p>只需要在AppDelegate中加入下面即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[NSURLProtocolregisterClass:[RNCachingURLProtocol class]];</span><br></pre></td></tr></table></figure>

<p>17、IM项目</p>
<p><a href="https://github.com/imsdk/IMDev-iOS" target="_blank" rel="noopener">爱萌</a></p>
<p>18、删除项目中多余的图片资源</p>
<p><a href="https://github.com/tinymind/LSUnusedResources" target="_blank" rel="noopener">地址</a></p>
<p>19、获取其他app的资源图片（Assets.car）</p>
<p><a href="https://github.com/steventroughtonsmith/cartool" target="_blank" rel="noopener">地址</a></p>
<p>20、OC代码规范</p>
<p><a href="https://github.com/samlaudev/Objective-C-Coding-Style#underscores" target="_blank" rel="noopener">地址</a></p>
<p>21、聊天界面（仿微信、QQ）</p>
<p><a href="https://github.com/CCSH/SHChatMessageUI" target="_blank" rel="noopener">地址</a></p>
<p>22、群组详情（微信的群详情）</p>
<p><a href="https://github.com/CCSH/SHGroupDetailsUI" target="_blank" rel="noopener">地址</a></p>
<p>23、发布界面（添加图片、文字）</p>
<p><a href="https://github.com/CCSH/SHPublishUI" target="_blank" rel="noopener">地址</a></p>
<p>24、表情键盘（图文混排）</p>
<p><a href="https://github.com/CCSH/SHEmotionKeyboard" target="_blank" rel="noopener">地址</a></p>
<p>25、粒子动画效果</p>
<p><a href="https://github.com/Xieyupeng520/AZEmitter" target="_blank" rel="noopener">地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 数据转换（持续更新）</title>
    <url>/2019/12/26/iOS%20%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
    <content><![CDATA[<a id="more"></a>
<p>NSString –&gt; NSArray</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSArray *arr = [str componentsSeparatedByString:@&quot;,&quot;];</span><br></pre></td></tr></table></figure>

<p>NSArray –&gt; NSString</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSString *str = [arr componentsJoinedByString:@&quot;,&quot;];</span><br></pre></td></tr></table></figure>

<p>NSString –&gt; NSData</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSData *data = [str dataUsingEncoding:NSUTF8StringEncoding];</span><br></pre></td></tr></table></figure>

<p>NSData –&gt; NSString</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSString *str = [[NSString alloc] initWithData:data  encoding:NSUTF8StringEncoding];</span><br></pre></td></tr></table></figure>

<p>NSDate –&gt; NSString</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];</span><br><span class="line">[dateFormatter setDateFormat:@&quot;yyyy-MM-dd HH:mm:ss&quot;];</span><br><span class="line">NSString *str = [dateFormatter stringFromDate:date];</span><br></pre></td></tr></table></figure>

<p>NSString –&gt; NSDate</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];</span><br><span class="line">[dateFormatter setDateFormat:@&quot;yyyy-MM-dd HH:mm:ss&quot;];</span><br><span class="line">NSDate *date = [dateFormatter dateFromString:str];</span><br></pre></td></tr></table></figure>

<p>NSString –&gt; NSDictionary</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSData *data = [str dataUsingEncoding:NSUTF8StringEncoding];</span><br><span class="line">NSDictionary *dic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];</span><br></pre></td></tr></table></figure>

<p>NSDictionary –&gt; NSString</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSData *data = [NSJSONSerialization dataWithJSONObject:dic options:NSJSONWritingPrettyPrinted error:nil];</span><br><span class="line">NSString*str = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];</span><br></pre></td></tr></table></figure>

<p>NSArray –&gt; NSData<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSData *data = [NSKeyedArchiver archivedDataWithRootObject:arr];</span><br></pre></td></tr></table></figure></p>
<p>NSData –&gt; NSArray</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSArray *arr = [NSKeyedUnarchiver unarchiveObjectWithData:data];</span><br></pre></td></tr></table></figure>

<p>NSDictionary –&gt; NSData</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSMutableData *data = [[NSMutableData alloc] init];</span><br><span class="line">NSKeyedArchiver *archiver = [[NSKeyedArchiver alloc] initForWritingWithMutableData:data]; </span><br><span class="line">[archiver encodeObject:dic forKey:@&quot;Some Key Value&quot;]; </span><br><span class="line">[archiver finishEncoding];</span><br></pre></td></tr></table></figure>

<p>NSData –&gt; NSDictionary</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSKeyedUnarchiver *unarchiver = [[NSKeyedUnarchiver alloc] initForReadingWithData:data]; </span><br><span class="line">NSDictionary *dic = [unarchiver decodeObjectForKey:@&quot;Some Key Value&quot;]; </span><br><span class="line">[unarchiver finishDecoding];</span><br></pre></td></tr></table></figure>

<p>UIImage –&gt; NSData</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ (NSData *)imageToData:(UIImage *)image CompressionNum:(int)num</span><br><span class="line">&#123;</span><br><span class="line">    return UIImageJPEGRepresentation(image, num)?:UIImagePNGRepresentation(image);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 显示与隐藏TabBar</title>
    <url>/2019/12/26/iOS%20%E6%98%BE%E7%A4%BA%E4%B8%8E%E9%9A%90%E8%97%8FTabBar/</url>
    <content><![CDATA[<a id="more"></a>
<p>3种方法<br>第一种</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark -隐藏TabBar</span><br><span class="line">- (void)hideTabBar &#123;</span><br><span class="line">    if (self.tabBarController.tabBar.hidden == YES) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    UIView *contentView;</span><br><span class="line">    if ( [[self.tabBarController.view.subviews objectAtIndex:0] isKindOfClass:[UITabBar class]] )</span><br><span class="line">        contentView = [self.tabBarController.view.subviews objectAtIndex:1];</span><br><span class="line">    else</span><br><span class="line">        contentView = [self.tabBarController.view.subviews objectAtIndex:0];</span><br><span class="line">    contentView.frame = CGRectMake(contentView.bounds.origin.x,  contentView.bounds.origin.y,  contentView.bounds.size.width, contentView.bounds.size.height + self.tabBarController.tabBar.frame.size.height);</span><br><span class="line">    self.tabBarController.tabBar.hidden = YES;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark -显示TabBar</span><br><span class="line">- (void)showTabBar &#123;</span><br><span class="line">    if (self.tabBarController.tabBar.hidden == NO)</span><br><span class="line">    &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    UIView *contentView;</span><br><span class="line">    if ([[self.tabBarController.view.subviews objectAtIndex:0] isKindOfClass:[UITabBar class]])</span><br><span class="line">        contentView = [self.tabBarController.view.subviews objectAtIndex:1];</span><br><span class="line">    </span><br><span class="line">    else</span><br><span class="line">        </span><br><span class="line">        contentView = [self.tabBarController.view.subviews objectAtIndex:0];</span><br><span class="line">    contentView.frame = CGRectMake(contentView.bounds.origin.x, contentView.bounds.origin.y,  contentView.bounds.size.width, contentView.bounds.size.height - self.tabBarController.tabBar.frame.size.height);</span><br><span class="line">    self.tabBarController.tabBar.hidden = NO;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第二种</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//隐藏</span><br><span class="line">self.hidesBottomBarWhenPushed = YES;</span><br><span class="line">//显示</span><br><span class="line">self.hidesBottomBarWhenPushed = NO;</span><br></pre></td></tr></table></figure>

<p>第三种</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vc.hidesBottomBarWhenPushed = YES;</span><br><span class="line">[self.navigationController pushViewController:vc animated:YES];</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 权限获取</title>
    <url>/2019/12/26/iOS%20%E6%9D%83%E9%99%90%E8%8E%B7%E5%8F%96/</url>
    <content><![CDATA[<a id="more"></a>
<p>iOS 8 以后需要进行plist文件配置<br><a href="http://www.jianshu.com/p/d407d2d477f1" target="_blank" rel="noopener">plist文件配置</a></p>
<p>####摄像头权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    AVAuthorizationStatus authStatus = [AVCaptureDevice authorizationStatusForMediaType:AVMediaTypeVideo];</span><br><span class="line">    </span><br><span class="line">    if (authStatus == AVAuthorizationStatusRestricted|| authStatus == AVAuthorizationStatusDenied) &#123;//没有权限</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        </span><br><span class="line">        if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) &#123;//成功获取</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">        &#125;else&#123;//没有摄像头</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">```      </span><br><span class="line"></span><br><span class="line">####麦克风权限</span><br></pre></td></tr></table></figure>

<p>[[AVAudioSession sharedInstance] requestRecordPermission:^(BOOL granted) {</p>
<pre><code>    if (granted) {//成功访问

    } else {//访问受限

    }
}];</code></pre><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">####照片权限</span><br></pre></td></tr></table></figure>

<p>if ([PHPhotoLibrary authorizationStatus] != PHAuthorizationStatusAuthorized) {//成功访问</p>
<p>}else{//访问受限</p>
<p>}</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">####定位权限</span><br></pre></td></tr></table></figure>

<p>//判断定位用户权限<br>    CLAuthorizationStatus status = [CLLocationManager authorizationStatus];</p>
<pre><code>//判断状态
switch (status) {
    case kCLAuthorizationStatusAuthorizedAlways://一直获取

        break;
    case kCLAuthorizationStatusAuthorizedWhenInUse://使用期间

        break;
    case kCLAuthorizationStatusDenied://用户禁止

        break;
    case kCLAuthorizationStatusNotDetermined://未做决定
    {
        //获取权限
        //使用期间使用 NSLocationWhenInUseUsageDescription
        [_locationManager requestWhenInUseAuthorization];
        //一直使用 NSLocationAlwaysUsageDescription</code></pre><p>//            [_locationManager requestAlwaysAuthorization];<br>        }<br>            break;<br>        case kCLAuthorizationStatusRestricted://受限制</p>
<pre><code>        break;
    default:
        break;
}</code></pre><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">####通讯录权限</span><br></pre></td></tr></table></figure>

<p>ABAddressBookRef addressBookRef = ABAddressBookCreateWithOptions(NULL, NULL);<br>    //请求访问用户通讯录，无论成功与否block都会调用<br>    ABAddressBookRequestAccessWithCompletion(addressBookRef, ^(bool granted, CFErrorRef error) {</p>
<pre><code>    if (granted) {//成功访问

    }else{//访问受限

    }
});</code></pre><pre><code></code></pre>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>权限获取</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 网络判断(2G、3G、4G、WiFi、无网络)</title>
    <url>/2019/12/26/iOS%20%E7%BD%91%E7%BB%9C%E5%88%A4%E6%96%AD(2G%E3%80%813G%E3%80%814G%E3%80%81WiFi%E3%80%81%E6%97%A0%E7%BD%91%E7%BB%9C)/</url>
    <content><![CDATA[<p>网络判断(2G、3G、4G、WiFi、无网络)</p>
<a id="more"></a>
<ul>
<li>网络判断</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (IBAction)btnClick:(UIButton *)sender &#123;</span><br><span class="line">    </span><br><span class="line">    int networkType = [self getNetworkStates];</span><br><span class="line">    </span><br><span class="line">    switch (networkType) &#123;</span><br><span class="line">        case 1:</span><br><span class="line">        &#123;</span><br><span class="line">            [sender setTitle:@&quot;2G&quot; forState:0];</span><br><span class="line">        &#125;</span><br><span class="line">            break;</span><br><span class="line">        case 2:</span><br><span class="line">        &#123;</span><br><span class="line">            [sender setTitle:@&quot;3G&quot; forState:0];</span><br><span class="line">        &#125;</span><br><span class="line">            break;</span><br><span class="line">        case 3:</span><br><span class="line">        &#123;</span><br><span class="line">            [sender setTitle:@&quot;4G&quot; forState:0];</span><br><span class="line">        &#125;</span><br><span class="line">            break;</span><br><span class="line">        case 5:</span><br><span class="line">        &#123;</span><br><span class="line">            [sender setTitle:@&quot;WiFi&quot; forState:0];</span><br><span class="line">        &#125;</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">        &#123;</span><br><span class="line">            [sender setTitle:@&quot;无网络&quot; forState:0];</span><br><span class="line">        &#125;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 判断网络类型</span><br><span class="line">- (int)getNetworkStates</span><br><span class="line">&#123;</span><br><span class="line">    NSArray *subviews = [[[[UIApplication sharedApplication] valueForKeyPath:@&quot;statusBar&quot;] valueForKeyPath:@&quot;foregroundView&quot;] subviews];</span><br><span class="line"></span><br><span class="line">    for (id child in subviews) &#123;</span><br><span class="line">        if ([child isKindOfClass:NSClassFromString(@&quot;UIStatusBarDataNetworkItemView&quot;)]) &#123;</span><br><span class="line">            return [[child valueForKeyPath:@&quot;dataNetworkType&quot;] intValue];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 自动生成单例类</title>
    <url>/2019/12/26/iOS%20%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%8D%95%E4%BE%8B%E7%B1%BB/</url>
    <content><![CDATA[<p>自动生成单例类</p>
<a id="more"></a>
<p>创建一个头文件写入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// .h</span><br><span class="line">#define singleton_interface(class) + (instancetype)shared##class;</span><br><span class="line"></span><br><span class="line">// .m</span><br><span class="line">#define singleton_implementation(class) \</span><br><span class="line">static class *_instance; \</span><br><span class="line">\</span><br><span class="line">+ (id)allocWithZone:(struct _NSZone *)zone \</span><br><span class="line">&#123; \</span><br><span class="line">    static dispatch_once_t onceToken; \</span><br><span class="line">    dispatch_once(&amp;onceToken, ^&#123; \</span><br><span class="line">        _instance = [super allocWithZone:zone]; \</span><br><span class="line">    &#125;); \</span><br><span class="line">\</span><br><span class="line">    return _instance; \</span><br><span class="line">&#125; \</span><br><span class="line">\</span><br><span class="line">+ (instancetype)shared##class \</span><br><span class="line">&#123; \</span><br><span class="line">    if (_instance == nil) &#123; \</span><br><span class="line">        _instance = [[class alloc] init]; \</span><br><span class="line">    &#125; \</span><br><span class="line">\</span><br><span class="line">    return _instance; \</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.h</span><br><span class="line">singleton_interface(ABC);</span><br><span class="line">.m</span><br><span class="line">singleton_implementation(ABC)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 常用控件之UIViewAutoresizing(自动适配)</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B9%8BUIViewAutoresizing(%E8%87%AA%E5%8A%A8%E9%80%82%E9%85%8D)/</url>
    <content><![CDATA[<a id="more"></a>
<p>UIViewAutoresizing是一个枚举类型，默认是UIViewAutoresizingNone，也就是不做任何处理。</p>
<hr>
<table>
<thead>
<tr>
<th>属性名</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>UIViewAutoresizingNone</td>
<td>不会随父视图的改变而改变</td>
</tr>
<tr>
<td>UIViewAutoresizingFlexibleLeftMargin</td>
<td>自动调整view与父视图左边距，以保证右边距不变</td>
</tr>
<tr>
<td>UIViewAutoresizingFlexibleWidth</td>
<td>自动调整view的宽度，保证左边距和右边距不变</td>
</tr>
<tr>
<td>UIViewAutoresizingFlexibleRightMargin</td>
<td>自动调整view与父视图右边距，以保证左边距不变</td>
</tr>
<tr>
<td>UIViewAutoresizingFlexibleTopMargin</td>
<td>自动调整view与父视图上边距，以保证下边距不变</td>
</tr>
<tr>
<td>UIViewAutoresizingFlexibleHeight</td>
<td>自动调整view的高度，以保证上边距和下边距不变</td>
</tr>
<tr>
<td>UIViewAutoresizingFlexibleBottomMargin</td>
<td>自动调整view与父视图的下边距，以保证上边距不变</td>
</tr>
</tbody></table>
<p>特别说明:<br>例如：如果想要调整视图的宽高来达到上下左右距离不变，可以使用如下方法，其他情况类似</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">view.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 常用方法(持续更新)</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0)/</url>
    <content><![CDATA[<a id="more"></a>
<p>//管理APP所有权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[[UIApplication sharedApplication] openURL:[NSURL URLWithString:UIApplicationOpenSettingsURLString]];</span><br></pre></td></tr></table></figure>

<p>//tableview取消选中（点击方法中添加此方法）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[self performSelector:@selector(deselect) withObject:nil afterDelay:0.25f];</span><br></pre></td></tr></table></figure>

<p>//取消选中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)deselect</span><br><span class="line">&#123;</span><br><span class="line">    [self.tableView deselectRowAtIndexPath:[self.tableView indexPathForSelectedRow] animated:YES];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>//使用系统的复制粘贴功能</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[UIPasteboard generalPasteboard].string = @&quot;你的字符串&quot;;</span><br></pre></td></tr></table></figure>

<p>//修改系统相册界面为中文</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在 Info.plist 文件中添加 Localizations 键值 内容为item 值为Chinese (simplified)</span><br></pre></td></tr></table></figure>

<p>//默认返回按钮去掉文字（此方法遇到特殊情况不好用，最好在界面跳转前重新定义backBarButtonItem）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[[UIBarButtonItem appearance] setBackButtonTitlePositionAdjustment:UIOffsetMake(0, -60) forBarMetrics:UIBarMetricsDefault];</span><br></pre></td></tr></table></figure>

<p>//禁止tableview滑动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">self.tableview.scrollEnabled = NO;</span><br></pre></td></tr></table></figure>

<p>//隐藏导航栏</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[self.navigationController.navigationBar setBackgroundImage:[UIImage new]</span><br><span class="line">                           forBarPosition:UIBarPositionAny</span><br><span class="line">                               barMetrics:UIBarMetricsDefault];</span><br><span class="line">[self.navigationController.navigationBar setShadowImage:[UIImage new]];</span><br></pre></td></tr></table></figure>

<p>//父视图透明子视图不透明</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">btn.backgroundColor = [[UIColor colorWithWhite:0.5 alpha:1] colorWithAlphaComponent:0.1];</span><br></pre></td></tr></table></figure>

<p>//tableview改变头部视图背景颜色与字体颜色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark 改变头部视图</span><br><span class="line">-(void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section&#123;</span><br><span class="line">    view.tintColor = ViewBGC;</span><br><span class="line">    UITableViewHeaderFooterView *head = (UITableViewHeaderFooterView *)view;</span><br><span class="line">    head.textLabel.textColor = RGB(62, 99, 114, 1);</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark 改变底部视图</span><br><span class="line">- (void)tableView:(UITableView *)tableView willDisplayFooterView:(UIView *)view forSection:(NSInteger)section&#123;</span><br><span class="line">    view.tintColor = [UIColor clearColor];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>//开启照明</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)touchesBegan:(NSSet&lt;UITouch *&gt; *)touches withEvent:(UIEvent *)event&#123;</span><br><span class="line"></span><br><span class="line">    self.isOpen = !self.isOpen;</span><br><span class="line">    </span><br><span class="line">    AVCaptureDevice *device = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo];</span><br><span class="line">    if ([device hasTorch]) &#123;</span><br><span class="line">        [device lockForConfiguration:nil];</span><br><span class="line">        if (self.isOpen) &#123;</span><br><span class="line">            [device setTorchMode:AVCaptureTorchModeOn];</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            [device setTorchMode:AVCaptureTorchModeOff];</span><br><span class="line">        &#125;</span><br><span class="line">        [device unlockForConfiguration];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>//UITableView 的 headerView跟随 cell一起滚动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)scrollViewDidScroll:(UIScrollView *)scrollView &#123;</span><br><span class="line">    if (scrollView == self.tableView)</span><br><span class="line">    &#123;</span><br><span class="line">        if (scrollView.contentOffset.y&lt;=SectionHeaderHeight &amp;&amp; scrollView.contentOffset.y&gt;=0) &#123;</span><br><span class="line">            scrollView.contentInset = UIEdgeInsetsMake(-scrollView.contentOffset.y, 0, 0, 0);</span><br><span class="line">        &#125; else if (scrollView.contentOffset.y &gt;= SectionHeaderHeight) &#123;</span><br><span class="line">            scrollView.contentInset = UIEdgeInsetsMake(-SectionHeaderHeight, 0, 0, 0);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>获取APP的图标 icon</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSDictionary *infoPlist = [[NSBundle mainBundle] infoDictionary];</span><br><span class="line"></span><br><span class="line">NSString *icon = [[infoPlist valueForKeyPath:@&quot;CFBundleIcons.CFBundlePrimaryIcon.CFBundleIconFiles&quot;] lastObject];</span><br><span class="line"></span><br><span class="line">UIImage* image = [UIImage imageNamed:icon];</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 常见错误(持续更新)</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0)/</url>
    <content><![CDATA[<a id="more"></a>
<p>问题：Unbalanced calls to begin/end appearance transitions for<br>解决：<br>如果是自定义的UITabBarController需要加入以下方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - view周期</span><br><span class="line">-(void)viewWillAppear:(BOOL)animated</span><br><span class="line">&#123;</span><br><span class="line">    [self.selectedViewController beginAppearanceTransition: YES animated: animated]; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(void) viewDidAppear:(BOOL)animated</span><br><span class="line">&#123;</span><br><span class="line">    [self.selectedViewController endAppearanceTransition];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(void) viewWillDisappear:(BOOL)animated</span><br><span class="line">&#123;</span><br><span class="line">    [self.selectedViewController beginAppearanceTransition: NO animated: animated];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(void) viewDidDisappear:(BOOL)animated</span><br><span class="line">&#123;</span><br><span class="line">    [self.selectedViewController endAppearanceTransition];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>问题：subsystem: com.apple.UIKit, category: Touch, enable_level: 0, persist_level: 0, default_ttl: 1, info_ttl: 0, debug_ttl: 0, generate_symptoms: 0, enable_oversize: 1, privacy_setting: 2, enable_private_data: 0<br>解决：<br><img src="http://upload-images.jianshu.io/upload_images/1897259-13b03ad38a2e4b18?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><img src="http://upload-images.jianshu.io/upload_images/1897259-f16d3b2539284993?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>添加键值为：OS_ACTIVITY_MODE<br>Value值为：disable</p>
<p>问题：Xcode8之后访问相册、相机、位置、麦克风、蓝牙等权限<br>解决：<br><img src="http://upload-images.jianshu.io/upload_images/1897259-65462d6a67224f74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSBluetoothPeripheralUsageDescription</span><br><span class="line">访问蓝牙</span><br><span class="line"></span><br><span class="line">NSCalendarsUsageDescription</span><br><span class="line">访问日历</span><br><span class="line"></span><br><span class="line">NSCameraUsageDescription</span><br><span class="line">相机</span><br><span class="line"></span><br><span class="line">NSPhotoLibraryUsageDescription</span><br><span class="line">相册</span><br><span class="line"></span><br><span class="line">NSContactsUsageDescription</span><br><span class="line">通讯录</span><br><span class="line"></span><br><span class="line">NSLocationAlwaysUsageDescription</span><br><span class="line">始终访问位置</span><br><span class="line"></span><br><span class="line">NSLocationUsageDescription</span><br><span class="line">位置</span><br><span class="line"></span><br><span class="line">NSLocationWhenInUseUsageDescription</span><br><span class="line">在使用期间访问位置</span><br><span class="line"></span><br><span class="line">NSMicrophoneUsageDescription</span><br><span class="line">麦克风</span><br><span class="line"></span><br><span class="line">NSAppleMusicUsageDescription</span><br><span class="line">访问媒体资料库</span><br><span class="line"></span><br><span class="line">NSHealthShareUsageDescription</span><br><span class="line">访问健康分享</span><br><span class="line"></span><br><span class="line">NSHealthUpdateUsageDescription</span><br><span class="line">访问健康更新</span><br><span class="line"></span><br><span class="line">NSMotionUsageDescription</span><br><span class="line">访问运动与健身</span><br><span class="line"></span><br><span class="line">NSRemindersUsageDescription</span><br><span class="line">访问提醒事项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">问题：Snapshotting a view that has not been rendered results in an empty snapshot. Ensure your view has been rendered at least once before snapshotting or snapshot after screen updates.</span><br><span class="line"></span><br><span class="line">解决：将跳转的相机VC属性设置成</span><br><span class="line">picker.modalPresentationStyle = UIModalPresentationOverCurrentContext;</span><br><span class="line"></span><br><span class="line">问题：[MC] Reading from public effective user settings.</span><br><span class="line"></span><br><span class="line">解决：设置权限的plist需要给一个描述</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 扇形点击位置</title>
    <url>/2019/12/26/iOS%20%E6%89%87%E5%BD%A2%E7%82%B9%E5%87%BB%E4%BD%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>扇形点击位置</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">float distance;//距离</span><br><span class="line"></span><br><span class="line">float rads;//弧度</span><br><span class="line"></span><br><span class="line">CGPoint point = [tap locationInView:self.view];</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;。。。触点的位置%@&quot;,NSStringFromCGPoint(point));</span><br><span class="line"></span><br><span class="line">CGPoint centerPoint = CGPointMake(WIDTH/2, (HEIGHT/2-30)/2);</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;。。。中心点的坐标%@&quot;,NSStringFromCGPoint(centerPoint));</span><br><span class="line"></span><br><span class="line">CGPoint startPoint = CGPointMake(WIDTH/2, HEIGHT/4-100);</span><br><span class="line"></span><br><span class="line">distance = [self distanceFromPointX:point distanceToPointY:centerPoint];</span><br><span class="line"></span><br><span class="line">rads = [self radiansToDegreesFromPointX:point ToPointY:startPoint ToCenter:centerPoint];</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - 计算触点和中心点的弧度</span><br><span class="line"></span><br><span class="line">-(float)radiansToDegreesFromPointX:(CGPoint)start ToPointY:(CGPoint)end ToCenter:(CGPoint)center&#123;</span><br><span class="line"></span><br><span class="line">  float rads;</span><br><span class="line"></span><br><span class="line">  CGFloat a = (end.x - center.x);</span><br><span class="line"></span><br><span class="line">  CGFloat b = (end.y - center.y);</span><br><span class="line"></span><br><span class="line">  CGFloat c = (start.x- center.x);</span><br><span class="line"></span><br><span class="line">  CGFloat d = (start.y- center.y);</span><br><span class="line"></span><br><span class="line">  rads = acos(((a*c) + (b*d)) / ((sqrt(a*a + b*b)) * (sqrt(c*c + d*d))));</span><br><span class="line"></span><br><span class="line">  if (start.x &lt; center.x) &#123;</span><br><span class="line"></span><br><span class="line">  rads = 2*M_PI - rads;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  return rads;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - 计算触点到中心点的距离</span><br><span class="line"></span><br><span class="line">-(float)distanceFromPointX:(CGPoint)start distanceToPointY:(CGPoint)end&#123;</span><br><span class="line"></span><br><span class="line">  float distance;</span><br><span class="line"></span><br><span class="line">  CGFloat xDist = (end.x - start.x);</span><br><span class="line"></span><br><span class="line">  CGFloat yDist = (end.y - start.y);</span><br><span class="line"></span><br><span class="line">  distance = sqrt((xDist * xDist) + (yDist * yDist));</span><br><span class="line"></span><br><span class="line">  return distance;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 打包framework</title>
    <url>/2019/12/26/iOS%20%E6%89%93%E5%8C%85framework/</url>
    <content><![CDATA[<a id="more"></a>
<p>####1、打开Xcode，新建工程</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-9f833e52a8d798f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="打开Xcode，新建工程"></p>
<p>####2、起个名字</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-5078445d6e7a9b4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="起个名字"></p>
<p>####3、创建成功</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-ce860cadb279d592.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建成功"></p>
<p>####4、实现功能</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-955727fff89380b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="实现功能"></p>
<p>.h</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ (void)sayHello;</span><br></pre></td></tr></table></figure>

<p>.m</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ (void)sayHello&#123;</span><br><span class="line">    NSLog(@&quot;hello word!!&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>####5、配置参数</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-35216aab4144e6cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="在TARGETS下选中工程，在Build Settings下更改几个参数"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-704d83750f622e42.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="在Architectures下增加armv7s"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-052a4e92cc7abafe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="将Build Active Architecture Only 设置为NO"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-41e6d76aa77021aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="将你要公开的头文件拖至Public下，要隐藏的放在Private或者Project下，当然，隐藏的头文件就无法再被引用"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-fb7220de8a83ecae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="然后需要在test.h（必须是公开的，否则无法引用）中将你所有要公开的.h引入"></p>
<p>####6、最后一步进行打包</p>
<p>1.选中模拟器，编译程序 command + b</p>
<p>2.选中测试机，编译程序 command + b</p>
<p>3.在finder中找到framework文件，然后右键show in finder</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-1b9297b9427055d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="然后右键show in finder"></p>
<p>4.会发现一个真机一个模拟器</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-7201ce98230bf688.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一个真机一个模拟器"></p>
<p>5.合并成一个征集与模拟器都可以使用framework</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-142e33f09f8a0999.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="将模拟器与真机的此文件合成一个"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">打开控制台输入 </span><br><span class="line">lipo -create &quot;真机版本路径&quot; &quot;模拟器版本路径&quot; -output &quot;合并后的文件路径&quot;</span><br></pre></td></tr></table></figure>

<p>然后回车<br>红色：真机文件路径<br>绿色：模拟器文件路径<br>黄色：新文件路径</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-e521dbf48188d44b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="演示"></p>
<p>6.得到一个合并完成的文件（如果有文件格式lipo直接去除）</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-470f358283ae95b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="最后结果"></p>
<p>7.替换之前的文件</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-f3e70d50e68725f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="新生成的替换之前的"></p>
<p>8.生成framework</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-661bb1569c018683.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="此文件就是最终的framework"></p>
<p>9.测试</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-c913f2bec64bb330.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="成功"></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 控件私有属性遍历</title>
    <url>/2019/12/26/iOS%20%E6%8E%A7%E4%BB%B6%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7%E9%81%8D%E5%8E%86/</url>
    <content><![CDATA[<a id="more"></a>
<p>控件私有属性遍历主要利用OC的RunTime机制<br>首先加入头文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#import &lt;objc/runtime.h&gt;</span><br></pre></td></tr></table></figure>

<p>写入代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unsigned int outCount = 0;</span><br><span class="line">Ivar *ivars = class_copyIvarList([NSClassFromString(@&quot;UIView&quot;) class], &amp;outCount);</span><br><span class="line"></span><br><span class="line">for (NSInteger i = 0; i &lt; outCount; ++i) &#123;</span><br><span class="line">    // 遍历取出该类成员变量</span><br><span class="line">    Ivar ivar = *(ivars + i);</span><br><span class="line">    </span><br><span class="line">    NSLog(@&quot;\n name = %s  \n type = %s&quot;, ivar_getName(ivar),ivar_getTypeEncoding(ivar));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 根据内存管理原则释放指针</span><br><span class="line">free(ivars);</span><br></pre></td></tr></table></figure>

<p>通过KVC进行修改</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    //拿到私有的属性forKey: 进行改变setValue:</span><br><span class="line">//    [self.view setValue:&lt;#(nullable id)#&gt; forKey:&lt;#(nonnull NSString *)#&gt;];</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 常用控件之MessageUI(短信发送框架)</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B9%8BMessageUI(%E7%9F%AD%E4%BF%A1%E5%8F%91%E9%80%81%E6%A1%86%E6%9E%B6)/</url>
    <content><![CDATA[<p>iOS 常用控件之MessageUI(短信发送框架)</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、加入框架MessageUI.framework</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2、导入头文件#import &lt;MessageUI/MessageUI.h&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3、如果需要回调则添加代理&lt;MFMessageComposeViewControllerDelegate&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4、使用</span><br><span class="line">    // 判断设备能不能发送短信</span><br><span class="line">    if([MFMessageComposeViewController canSendText])&#123;</span><br><span class="line">        </span><br><span class="line">        MFMessageComposeViewController*picker = [[MFMessageComposeViewController alloc] init];</span><br><span class="line">        // 设置委托</span><br><span class="line">        picker.messageComposeDelegate= self;</span><br><span class="line">        // 默认信息内容(可以去服务器进行拉取内容)</span><br><span class="line">        picker.body = @&quot;ABCD&quot;;</span><br><span class="line">        // 默认收件人(可多个)</span><br><span class="line">        picker.recipients = @[@&quot;12345678900&quot;];</span><br><span class="line">        </span><br><span class="line">        [self presentViewController:picker animated:YES completion:nil];</span><br><span class="line">        </span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        // 提示用户不能发送短信</span><br><span class="line">        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:@&quot;该设备不支持短信功能&quot; delegate:nil cancelButtonTitle:nil otherButtonTitles:@&quot;确定&quot;, nil];</span><br><span class="line">        [alert show];</span><br><span class="line">    &#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure>

<p>5、代理<br>#pragma mark MFMessageComposeViewControllerDelegate</p>
<ul>
<li><p>(void)messageComposeViewController:(MFMessageComposeViewController *)controller didFinishWithResult:(MessageComposeResult)result {</p>
<p>  // 不管任何状态返回之前界面<br>  [controller dismissViewControllerAnimated:YES completion:nil];</p>
<p>  NSString *message;<br>  switch (result){</p>
<pre><code>case MessageComposeResultCancelled:
{
    NSLog(@&quot;取消发送&quot;);
    message = @&quot;取消发送&quot;;
}
    break;
case MessageComposeResultFailed:
{
    NSLog(@&quot;发送失败&quot;);
    message = @&quot;发送失败&quot;;
}
    break;
case MessageComposeResultSent:
{
    NSLog(@&quot;发送成功&quot;);
    message = @&quot;发送成功&quot;;
}
    break;

default:
    break;</code></pre><p>  }<br>  UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@”提示” message:message delegate:nil cancelButtonTitle:nil otherButtonTitles:@”确定”, nil];<br>  [alert show];<br>}<br>```</p>
</li>
</ul>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 常用控件之NSString的文件路径操作</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B9%8BNSString%E7%9A%84%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<a id="more"></a>
<ul>
<li>字符串</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSString *path = @&quot;123/qwert/csh.txt&quot;;</span><br></pre></td></tr></table></figure>

<ul>
<li>获取文件名（带格式）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">path.lastPathComponent</span><br><span class="line">输出：csh.txt</span><br></pre></td></tr></table></figure>

<ul>
<li>获取文件路径（不带文件）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">path.stringByDeletingLastPathComponent</span><br><span class="line">输出：123/qwert</span><br></pre></td></tr></table></figure>

<ul>
<li>获取文件路径(带文件不带类型)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">path.stringByDeletingPathExtension</span><br><span class="line">输出：123/qwert/csh</span><br></pre></td></tr></table></figure>

<ul>
<li>获取文件类型</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">path.pathExtension</span><br><span class="line">输出：txt</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 常用控件之UICollectionView</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B9%8BUICollectionView/</url>
    <content><![CDATA[<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - 懒加载</span><br><span class="line">- (UICollectionView *)collectionView &#123;</span><br><span class="line">    </span><br><span class="line">    if (!_collectionView) &#123;</span><br><span class="line">        //UICollectionView的自动布局</span><br><span class="line">        UICollectionViewFlowLayout *layout = [[UICollectionViewFlowLayout alloc]init];</span><br><span class="line">        //设置滑动方向</span><br><span class="line">        //UICollectionViewScrollDirectionHorizontal  水平滑动</span><br><span class="line">        //UICollectionViewScrollDirectionVertical    竖直滑动</span><br><span class="line">        layout.scrollDirection = UICollectionViewScrollDirectionHorizontal;</span><br><span class="line">        //下放两个属性可以在这里设置也可以在下方代理中设置（默认10）</span><br><span class="line">        //设置水平间距（内部）</span><br><span class="line">        layout.minimumInteritemSpacing = 5;</span><br><span class="line">        //设置竖直间距（内部）</span><br><span class="line">        layout.minimumLineSpacing = 5;</span><br><span class="line">        </span><br><span class="line">        _collectionView = [[UICollectionView alloc]initWithFrame:CGRectMake(0, 0, SHWidth, SHHeight - 64) collectionViewLayout:layout];</span><br><span class="line">        _collectionView.backgroundColor = [UIColor clearColor];</span><br><span class="line">        _collectionView.delegate = self;</span><br><span class="line">        _collectionView.dataSource = self;</span><br><span class="line">        </span><br><span class="line">        [self.view addSubview:_collectionView];</span><br><span class="line">        </span><br><span class="line">        //注册cell类</span><br><span class="line">        [_collectionView registerNib:[UINib nibWithNibName:reuseIdentifier bundle:[NSBundle mainBundle]] forCellWithReuseIdentifier:reuseIdentifier];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return _collectionView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - UICollectionViewDelegate</span><br><span class="line">- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView &#123;</span><br><span class="line">    </span><br><span class="line">    return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (NSInteger )collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section &#123;</span><br><span class="line">    </span><br><span class="line">    return self.dataSoure.count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark 实例化UICollectionView</span><br><span class="line">- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath &#123;</span><br><span class="line">    </span><br><span class="line">    SHChatBGDetailCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:reuseIdentifier forIndexPath:indexPath];</span><br><span class="line">    //设置数据</span><br><span class="line">    [cell setCellDataSoure:self.dataSoure IndexPath:indexPath select:self.select];</span><br><span class="line">    </span><br><span class="line">    return cell;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark 设置item的大小</span><br><span class="line">- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath &#123;</span><br><span class="line">    //竖直滑动时：</span><br><span class="line">    //item排列：最左边的item根据collectionView的最左边的点去做长和高（向左向下），最右边的item根据collectionView的最右边的点去做长和高（向右向下）</span><br><span class="line">    //水平滑动时：</span><br><span class="line">    //item排列：最上边和左边的item根据collectionView的最上边和左边的点去做长和高（向左向下），最下边和最左边的item根据collectionView的最下边和最左边的点去做长和高（向右向上）</span><br><span class="line">    return CGSizeMake((SHWidth - 20)/3, (SHWidth - 20)/3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark collectionView边间距(整体collectionView的上左下右)</span><br><span class="line">- (UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section &#123;</span><br><span class="line">    //上左下右</span><br><span class="line">    return UIEdgeInsetsMake(10, 5, 0, 5);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark 点击</span><br><span class="line">- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 常用控件之UIMenuController</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B9%8BUIMenuController/</url>
    <content><![CDATA[<a id="more"></a>
<ul>
<li>初始化UIMenuItem</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UIMenuItem *one = [[UIMenuItem alloc] initWithTitle:@&quot;复制&quot;action:@selector(menuOne:)];</span><br><span class="line">UIMenuItem *two = [[UIMenuItem alloc] initWithTitle:@&quot;删除&quot;action:@selector(menuTwo:)];</span><br><span class="line">UIMenuItem *three = [[UIMenuItem alloc] initWithTitle:@&quot;转发&quot;action:@selector(menuThree:)];</span><br></pre></td></tr></table></figure>

<ul>
<li>初始化UIMenuController</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UIMenuController *menu = [UIMenuController sharedMenuController];</span><br><span class="line">//菜单箭头方向</span><br><span class="line">menu.arrowDirection = UIMenuControllerArrowDefault;</span><br><span class="line">//添加Item内容</span><br><span class="line">[menu setMenuItems:[NSArray arrayWithObjects:one, two, three, nil]];</span><br><span class="line">//设置位置与添加视图(可以给cell的frame)</span><br><span class="line">[menu setTargetRect:CGRectMake(100, 100, 100, 20) inView:self.view];</span><br><span class="line">//显示菜单MenuVisible:并且带动画animated:</span><br><span class="line">[menu setMenuVisible:YES animated:YES];</span><br></pre></td></tr></table></figure>

<ul>
<li>还有最关键的一点添加此方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (BOOL)canBecomeFirstResponder</span><br><span class="line">&#123;    </span><br><span class="line">    return YES;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>实现方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)menuOne:(id)sender&#123;</span><br><span class="line">    NSLog(@&quot;复制&quot;);</span><br><span class="line">&#125;</span><br><span class="line">- (void)menuTwo:(id)sender&#123;</span><br><span class="line">    NSLog(@&quot;删除&quot;);</span><br><span class="line">&#125;</span><br><span class="line">- (void)menuThree:(id)sender&#123;</span><br><span class="line">    NSLog(@&quot;转发&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>完整代码</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//定义一个开关isOpen</span><br><span class="line">- (void)touchesBegan:(NSSet&lt;UITouch *&gt; *)touches withEvent:(UIEvent *)event&#123;</span><br><span class="line">    </span><br><span class="line">    //返回与当前接收者有关的所有的触摸对象</span><br><span class="line">    NSSet *allTouches = [event allTouches];</span><br><span class="line">    //视图中的所有对象</span><br><span class="line">    UITouch *touch = [allTouches anyObject];</span><br><span class="line">    //返回触摸点在视图中的当前坐标</span><br><span class="line">    CGPoint point = [touch locationInView:[touch view]];</span><br><span class="line"></span><br><span class="line">    UIMenuItem *one = [[UIMenuItem alloc] initWithTitle:@&quot;复制&quot;action:@selector(menuOne:)];</span><br><span class="line">    UIMenuItem *two = [[UIMenuItem alloc] initWithTitle:@&quot;删除&quot;action:@selector(menuTwo:)];</span><br><span class="line">    UIMenuItem *three = [[UIMenuItem alloc] initWithTitle:@&quot;转发&quot;action:@selector(menuThree:)];</span><br><span class="line"></span><br><span class="line">    UIMenuController *menu = [UIMenuController sharedMenuController];</span><br><span class="line">    //菜单箭头方向(默认会自动判定)</span><br><span class="line">    menu.arrowDirection = UIMenuControllerArrowDefault;</span><br><span class="line">    //添加内容</span><br><span class="line">    [menu setMenuItems:[NSArray arrayWithObjects:one, two, three, nil]];</span><br><span class="line">    //设置位置</span><br><span class="line">    [menu setTargetRect:CGRectMake(point.x, point.y, 0, 0) inView:self.view];</span><br><span class="line">    //显示菜单并且带动画</span><br><span class="line">    [menu setMenuVisible:!isOpen animated:YES];</span><br><span class="line">    isOpen = !isOpen;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (BOOL)canBecomeFirstResponder</span><br><span class="line">&#123;</span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)menuOne:(id)sender&#123;</span><br><span class="line">    NSLog(@&quot;复制&quot;);</span><br><span class="line">&#125;</span><br><span class="line">- (void)menuTwo:(id)sender&#123;</span><br><span class="line">    NSLog(@&quot;删除&quot;);</span><br><span class="line">&#125;</span><br><span class="line">- (void)menuThree:(id)sender&#123;</span><br><span class="line">    NSLog(@&quot;转发&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>预览效果<br><img src="http://upload-images.jianshu.io/upload_images/1897259-abbede710e07a378.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4B648165-B8A7-4BB0-A018-312CD202D45D.png"></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 常用控件之UISearchBar</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B9%8BUISearchBar/</url>
    <content><![CDATA[<a id="more"></a>
<p>实例化UISearchBar</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UISearchBar *searchBar = [[UISearchBar alloc]initWithFrame:CGRectMake(0, 64, SHWidth, 40)];</span><br><span class="line">//设置提示文字</span><br><span class="line">searchBar.placeholder = @&quot;搜索&quot;;</span><br><span class="line">//设置边框背景图片</span><br><span class="line">searchBar.backgroundImage = [UIImage imageNamed:@&quot;searchBar_BG&quot;];</span><br><span class="line">//设置代理</span><br><span class="line">searchBar.delegate = self;</span><br><span class="line">//添加到视图</span><br><span class="line">self.tableView.tableHeaderView = searchBar;</span><br></pre></td></tr></table></figure>

<p>UISearchBar代理方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - UISearchBarDelegate</span><br><span class="line">#pragma mark 搜索文字改变</span><br><span class="line">- (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">#pragma mark 搜索开始编辑</span><br><span class="line">- (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar</span><br><span class="line">&#123;</span><br><span class="line">    //设置取消按钮样式</span><br><span class="line">    //首先取出cancelBtn</span><br><span class="line">    UIButton *cancelBtn = [searchBar valueForKey:@&quot;cancelButton&quot;];</span><br><span class="line">    //取消按钮文字</span><br><span class="line">    [cancelBtn setTitle:@&quot;取消&quot; forState:UIControlStateNormal];</span><br><span class="line">    //取消按钮文字颜色</span><br><span class="line">    [cancelBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark  编辑</span><br><span class="line">- (BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar</span><br><span class="line">&#123;</span><br><span class="line">    //展示取消按钮</span><br><span class="line">    searchBar.showsCancelButton = YES;</span><br><span class="line"> </span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark  编辑</span><br><span class="line">- (BOOL)searchBarShouldEndEditing:(UISearchBar *)searchBar</span><br><span class="line">&#123;</span><br><span class="line">    return YES;</span><br><span class="line">&#125;</span><br><span class="line">#pragma mark 取消按钮点击</span><br><span class="line">- (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar</span><br><span class="line">&#123;</span><br><span class="line">    searchBar.text = @&quot;&quot;;</span><br><span class="line">    //收起键盘</span><br><span class="line">    [searchBar resignFirstResponder];</span><br><span class="line">    //隐藏取消按钮</span><br><span class="line">    [searchBar setShowsCancelButton:NO animated:YES];</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>iOS 常用控件之UIScrollView</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B9%8BUIScrollView/</url>
    <content><![CDATA[<p>常用控件之UIScrollView</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - UIScrollViewDelegate</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/* 此方法在scrollView滑动时会被调用多次，只要scrollView.contentOffset发生改变就会被调用 */</span><br><span class="line">(void)scrollViewDidScroll:(UIScrollView *)scrollView</span><br><span class="line"></span><br><span class="line">/* 在一次拖动滑动中最后被调用，在</span><br><span class="line">(void)scrollViewDidScroll:(UIScrollView *)scrollView；</span><br><span class="line">之后 */</span><br><span class="line">(void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView</span><br><span class="line"></span><br><span class="line">/* 此方法在拖动结束后将要开始减速时被调用 */</span><br><span class="line">(void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate</span><br><span class="line"></span><br><span class="line">/*此方法在手动滑动时不会调用，只有在</span><br><span class="line">(void)setContentOffset:(CGPoint)contentOffset animated:(BOOL)animated;</span><br><span class="line">(void)scrollRectToVisible:(CGRect) animated:(BOOL)animated; </span><br><span class="line">调用后才调用 */</span><br><span class="line">(void)scrollViewDidEndScrollingAnimation:(UIScrollView *)scrollView</span><br><span class="line"></span><br><span class="line">/* 此方法在开始减速时被调用,再一次拖动滑动中最先被调用 */</span><br><span class="line">(void)scrollViewWillBeginDecelerating:(UIScrollView *)scrollView</span><br><span class="line"></span><br><span class="line">/* 当scale发生改变时，调用此方法，此方法会被调用多次 */</span><br><span class="line">(void)scrollViewDidZoom:(UIScrollView *)scrollView</span><br><span class="line"></span><br><span class="line">/* 当滚动视图滚动到最顶端后，执行该方法 */</span><br><span class="line">(void)scrollViewDidScrollToTop:(UIScrollView *)scrollView</span><br><span class="line"></span><br><span class="line">/* 此方法在拖动开始时被调用，一次拖动抵用一次，未发生触控不会被调用 */</span><br><span class="line">(void)scrollViewWillBeginDragging:(UIScrollView *)scrollView</span><br><span class="line"></span><br><span class="line">/* 此方法在scale开始时被调用，一次scale调用一次 */</span><br><span class="line">(void)scrollViewWillBeginZooming:(UIScrollView *)scrollView withView:(UIView *)view</span><br><span class="line"></span><br><span class="line">/* 特别注意这个方法，此方法可以获取Velocity可以用于判断滑动方向，tarContentOffset可以用于判断是否会已经滑动翻页 */</span><br><span class="line">(void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset</span><br><span class="line"></span><br><span class="line">/* zoom之后会被调用，可以用atScale得到zoom值从而进行进一步处理 */</span><br><span class="line">(void)scrollViewDidEndZooming:(UIScrollView *)scrollView withView:(UIView *)view atScale:(CGFloat)scale</span><br><span class="line"></span><br><span class="line">//此方法设置可以scale的view</span><br><span class="line">(nullable UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView &#123; if (scrollView == self.myScrollView2) &#123; NSLog(@&quot;hahah&quot;); return self.Views[0]; &#125; return nil; &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 布局之淘宝、京东、微博、半糖、闲鱼等首页界面</title>
    <url>/2019/12/26/iOS%20%E5%B8%83%E5%B1%80%E4%B9%8B%E6%B7%98%E5%AE%9D%E3%80%81%E4%BA%AC%E4%B8%9C%E3%80%81%E5%BE%AE%E5%8D%9A%E3%80%81%E5%8D%8A%E7%B3%96%E3%80%81%E9%97%B2%E9%B1%BC%E7%AD%89%E9%A6%96%E9%A1%B5%E7%95%8C%E9%9D%A2/</url>
    <content><![CDATA[<a id="more"></a>
<p><img src="https://upload-images.jianshu.io/upload_images/1897259-7cc79260aa356e03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果"></p>
<p><a href="https://github.com/CCSH/SHScrollLayout" target="_blank" rel="noopener">代码地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>封装</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 常用宏定义</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E7%94%A8%E5%AE%8F%E5%AE%9A%E4%B9%89/</url>
    <content><![CDATA[<p>iOS 常用宏定义</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - 方法定义</span><br><span class="line">#pragma mark 颜色</span><br><span class="line">#define kRGB(R,G,B,A) [UIColor colorWithRed:R/255.0 green:G/255.0 blue:B/255.0 alpha:A]</span><br><span class="line"></span><br><span class="line">#pragma mark 描边</span><br><span class="line">#define kSHViewBorderRadius(View, Radius, Width, Color)\</span><br><span class="line">\</span><br><span class="line">[View.layer setMasksToBounds:YES];\</span><br><span class="line">[View.layer setBorderWidth:(Width)];\</span><br><span class="line">[View.layer setCornerRadius:(Radius)];\</span><br><span class="line">[View.layer setBorderColor:[Color CGColor]]</span><br><span class="line"></span><br><span class="line">#pragma mark - 其他定义</span><br><span class="line">//设备物理宽高</span><br><span class="line">#define kSHHeight ([UIScreen mainScreen].bounds.size.height)</span><br><span class="line">#define kSHWidth ([UIScreen mainScreen].bounds.size.width)</span><br><span class="line"></span><br><span class="line">//界面宽高</span><br><span class="line">#define kSHViewWidth (self.view.frame.size.width)</span><br><span class="line">#define kSHViewHeight (self.view.frame.size.height)</span><br><span class="line"></span><br><span class="line">//状态栏高度</span><br><span class="line">#define kStatusBarH ([[UIApplication sharedApplication] statusBarFrame].size.height)</span><br><span class="line"></span><br><span class="line">//是否为V以上系统</span><br><span class="line">#define IOS(V) [[[UIDevice currentDevice] systemVersion] floatValue] &gt;= V</span><br><span class="line"></span><br><span class="line">// 系统delegate</span><br><span class="line">#define kSHAppDelegate (AppDelegate *)[UIApplication sharedApplication].delegate</span><br><span class="line"></span><br><span class="line">//计算耗时</span><br><span class="line">#define TICK        CFAbsoluteTime start = CFAbsoluteTimeGetCurrent();</span><br><span class="line">#define TOCKFor(A)  SHLog(@&quot;耗时计算-%@: %f&quot;,(A),CFAbsoluteTimeGetCurrent() - start);</span><br><span class="line">#define TOCK        SHLog(@&quot;耗时计算: %f&quot;,CFAbsoluteTimeGetCurrent() - start);</span><br><span class="line"></span><br><span class="line">#pragma mark - 文件路径</span><br><span class="line">//Document目录</span><br><span class="line">#define DocumentPatch [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject]</span><br><span class="line"></span><br><span class="line">//Caches目录</span><br><span class="line">#define CachesPatch NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES)[0]</span><br><span class="line"></span><br><span class="line">//Temp目录</span><br><span class="line">#define TempPatch NSTemporaryDirectory()</span><br><span class="line"></span><br><span class="line">#pragma mark - NSUserDefaults使用的键值</span><br><span class="line"></span><br><span class="line">#define kSHUserDefaults [NSUserDefaults standardUserDefaults]</span><br><span class="line"></span><br><span class="line">//清除模型中的所有数据</span><br><span class="line">#define kSHClearModelData(Model) \</span><br><span class="line">\</span><br><span class="line">Model *_model##Model = [[Model alloc] init];\</span><br><span class="line">u_int count##Model;\</span><br><span class="line">objc_property_t *properties##Model = class_copyPropertyList([Model class], &amp;count##Model);\</span><br><span class="line">for (int i = 0; i&lt; count##Model; i++)&#123;\</span><br><span class="line">    [_model##Model setValue:nil forKey:[NSString stringWithFormat:@&quot;%s&quot;,property_getName(properties##Model[i])]];\</span><br><span class="line">&#125;\</span><br><span class="line">free(properties##Model);\</span><br><span class="line"></span><br><span class="line">#pragma mark 适配(pt)</span><br><span class="line">//4S:320*480</span><br><span class="line">//5:320*568</span><br><span class="line">//6:375*667</span><br><span class="line">//6P:414*736</span><br><span class="line">//X:375*812</span><br><span class="line">#define kSHGetW(W) ((W)*([UIScreen mainScreen].bounds.size.width)/375)</span><br><span class="line">#define kSHGetH(H) ((H)*([UIScreen mainScreen].bounds.size.height)/667)</span><br><span class="line"></span><br><span class="line">// weak &amp; strong</span><br><span class="line">#define kSHWeak(VAR) \</span><br><span class="line">@try &#123;&#125; @finally &#123;&#125; \</span><br><span class="line">__weak __typeof__(VAR) weak_##VAR = (VAR);</span><br><span class="line"></span><br><span class="line">#define kSHStrong(VAR) \</span><br><span class="line">@try &#123;&#125; @finally &#123;&#125; \</span><br><span class="line">__strong __typeof__(VAR) VAR = weak_##VAR</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>宏</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 常用控件之CAAnimation</title>
    <url>/2019/12/26/iOS%20%E5%B8%B8%E7%94%A8%E6%8E%A7%E4%BB%B6%E4%B9%8BCAAnimation/</url>
    <content><![CDATA[<a id="more"></a>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>duration</td>
<td>动画的时长</td>
</tr>
<tr>
<td>repeatCount</td>
<td>重复的次数。不停重复设置为 HUGE_VALF（一般不与一般不与repeatDuration同时使用同时使用）</td>
</tr>
<tr>
<td>repeatDuration</td>
<td>设置动画的时间。在该时间内动画一直执行，不计次数。（一般不与一般不与repeatCount同时使用同时使用）</td>
</tr>
<tr>
<td>beginTime</td>
<td>指定动画开始的时间。从开始延迟几秒的话，设置为【CACurrentMediaTime() + 秒数】 的方式</td>
</tr>
<tr>
<td>timingFunction</td>
<td>设置动画的速度变化</td>
</tr>
<tr>
<td>autoreverses</td>
<td>动画结束时是否执行逆动画</td>
</tr>
<tr>
<td>fromValue</td>
<td>所改变属性的起始值</td>
</tr>
<tr>
<td>toValue</td>
<td>所改变属性的结束时的值</td>
</tr>
<tr>
<td>byValue</td>
<td>所改变属性相同起始值的改变量</td>
</tr>
<tr>
<td>###keyPath的值</td>
<td></td>
</tr>
<tr>
<td><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//    transform.scale = 比例转换(x.y不写就是中心点)</span><br><span class="line">//    transform.rotation = 旋转(x.y.z不写就是中心点)</span><br><span class="line">//    opacity = 透明度</span><br><span class="line">//    margin = 边距</span><br><span class="line">//    position ＝ 位移</span><br><span class="line">//    backgroundColor = 背景颜色</span><br><span class="line">//    cornerRadius = 圆角</span><br><span class="line">//    borderWidth ＝ 边框宽度</span><br><span class="line">//    bounds ＝ 位置，体积</span><br><span class="line">//    contents ＝ 内容</span><br><span class="line">//    contentsRect ＝ 面积</span><br><span class="line">//    frame ＝ 位置，体积</span><br><span class="line">//    hidden ＝ 是否隐藏</span><br><span class="line">//    mask ＝ 任务</span><br><span class="line">//    masksToBounds</span><br><span class="line">//    shadowColor ＝ 阴影颜色</span><br><span class="line">//    shadowOffset ＝ 阴影偏移</span><br><span class="line">//    shadowOpacity ＝ 阴影透明</span><br><span class="line">//    shadowRadius ＝ 阴影半径</span><br></pre></td></tr></table></figure></td>
<td></td>
</tr>
</tbody></table>
<p>####部分keyPath对应形式<br>说明 | 使用形式<br>—|—<br>transform.scale 比例转化 | @(0<del>1)<br>transform.scale.x 宽的比例 | @(0</del>1)<br>transform.scale.y  高的比例 | @(0<del>1)<br>transform.rotation 围绕中心点旋转 | @(0</del>2<em>M_PI)<br>transform.rotation.x 围绕x轴旋转 | @(0~2</em>M_PI)<br>transform.rotation.y 围绕y轴旋转 | @(0<del>2*M_PI)<br>transform.rotation.z 围绕z轴旋转 | @(0</del>2*M_PI)<br>cornerRadius 圆角的设置 | @(X)<br>backgroundColor 背景颜色的变化 | (id)[UIColor xxxColor].CGColor<br>bounds 大小中心不变 | [NSValue valueWithCGRect:CGRectMake(X, Y, W, H)];<br>position 位置(中心点的改变) | [NSValue valueWithCGPoint:CGPointMake(X, Y)];<br>contents 内容 | 比如UIImageView的图片imageView.toValue = (id)[UIImage imageNamed:@”xxx.png”].CGImage;<br>opacity 透明度 | @(0<del>1)<br>contentsRect.size.width 横向拉伸缩放 | @(0</del>1)</p>
<p>具体使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//圆角</span><br><span class="line">    CABasicAnimation *animation1 = [[CABasicAnimation alloc]init];</span><br><span class="line">    //动画效果</span><br><span class="line">    animation1.keyPath = @&quot;cornerRadius&quot;;</span><br><span class="line">    //动画执行周期</span><br><span class="line">    animation1.duration = 1;</span><br><span class="line">    //进行改变</span><br><span class="line">    animation1.toValue = @(self.btn.frame.size.height/2);</span><br><span class="line">    //保持动画结束之后的状态</span><br><span class="line">    animation1.fillMode = kCAFillModeForwards;</span><br><span class="line">    animation1.removedOnCompletion = NO;</span><br><span class="line">    </span><br><span class="line">    //位置(向上平移100)</span><br><span class="line">    CABasicAnimation *animation2 = [[CABasicAnimation alloc]init];</span><br><span class="line">    //动画效果</span><br><span class="line">    animation2.keyPath = @&quot;position&quot;;</span><br><span class="line">    //动画执行周期</span><br><span class="line">    animation2.duration = 1;</span><br><span class="line">    //开始时间</span><br><span class="line">    animation2.beginTime = animation1.beginTime + animation1.duration;</span><br><span class="line">    //进行改变</span><br><span class="line">    animation2.toValue = [NSValue valueWithCGPoint:CGPointMake(self.btn.center.x, self.btn.center.y - 100)];</span><br><span class="line">    //保持动画结束之后的状态</span><br><span class="line">    animation2.fillMode = kCAFillModeForwards;</span><br><span class="line">    animation2.removedOnCompletion = NO;</span><br><span class="line">    </span><br><span class="line">    //翻转(X轴)</span><br><span class="line">    CABasicAnimation *animation3 = [[CABasicAnimation alloc]init];</span><br><span class="line">    //动画效果</span><br><span class="line">    animation3.keyPath = @&quot;transform.rotation.x&quot;;</span><br><span class="line">    //动画执行周期</span><br><span class="line">    animation3.duration = 1;</span><br><span class="line">    //开始时间</span><br><span class="line">    animation3.beginTime = animation2.beginTime;</span><br><span class="line">    //进行改变</span><br><span class="line">    animation3.toValue = @(2*M_PI);</span><br><span class="line">    //保持动画结束之后的状态</span><br><span class="line">    animation3.fillMode = kCAFillModeForwards;</span><br><span class="line">    animation3.removedOnCompletion = NO;</span><br><span class="line">    </span><br><span class="line">    //bounds(等高)</span><br><span class="line">    CABasicAnimation *animation4 = [[CABasicAnimation alloc]init];</span><br><span class="line">    //动画效果</span><br><span class="line">    animation4.keyPath = @&quot;bounds&quot;;</span><br><span class="line">    //动画执行周期</span><br><span class="line">    animation4.duration = 1;</span><br><span class="line">    //开始时间</span><br><span class="line">    animation4.beginTime = animation3.beginTime + animation3.duration;</span><br><span class="line">    //进行改变</span><br><span class="line">    animation4.toValue = [NSValue valueWithCGRect:CGRectMake(self.btn.frame.origin.x + (self.btn.frame.size.width - self.btn.frame.size.height)/2, self.btn.frame.origin.y, self.btn.frame.size.height, self.btn.frame.size.height)];</span><br><span class="line">    //保持动画结束之后的状态</span><br><span class="line">    animation4.fillMode = kCAFillModeForwards;</span><br><span class="line">    animation4.removedOnCompletion = NO;</span><br><span class="line">    </span><br><span class="line">    //旋转</span><br><span class="line">    CABasicAnimation *animation5 = [[CABasicAnimation alloc]init];</span><br><span class="line">    //动画效果</span><br><span class="line">    animation5.keyPath = @&quot;transform.rotation&quot;;</span><br><span class="line">    //动画执行周期</span><br><span class="line">    animation5.duration = 1;</span><br><span class="line">    //开始时间</span><br><span class="line">    animation5.beginTime = animation4.beginTime;</span><br><span class="line">    //进行改变</span><br><span class="line">    animation5.toValue = @(2*M_PI);</span><br><span class="line">    //保持动画结束之后的状态</span><br><span class="line">    animation5.fillMode = kCAFillModeForwards;</span><br><span class="line">    animation5.removedOnCompletion = NO;</span><br><span class="line">    </span><br><span class="line">    //淡入淡出</span><br><span class="line">    CABasicAnimation *animation6 = [[CABasicAnimation alloc]init];</span><br><span class="line">    //动画效果</span><br><span class="line">    animation6.keyPath = @&quot;opacity&quot;;</span><br><span class="line">    //动画执行周期</span><br><span class="line">    animation6.duration = 1;</span><br><span class="line">    //开始时间</span><br><span class="line">    animation6.beginTime = animation5.beginTime + animation5.duration;</span><br><span class="line">    //进行改变</span><br><span class="line">    animation6.fromValue = @0;</span><br><span class="line">    animation6.toValue = @1;</span><br><span class="line">    //保持动画结束之后的状态</span><br><span class="line">    animation6.fillMode = kCAFillModeForwards;</span><br><span class="line">    animation6.removedOnCompletion = NO;</span><br><span class="line">    </span><br><span class="line">    //背景颜色</span><br><span class="line">    CABasicAnimation *animation7 = [[CABasicAnimation alloc]init];</span><br><span class="line">    //动画效果</span><br><span class="line">    animation7.keyPath = @&quot;backgroundColor&quot;;</span><br><span class="line">    //动画执行周期</span><br><span class="line">    animation7.duration = 1;</span><br><span class="line">    //开始时间</span><br><span class="line">    animation7.beginTime = animation6.beginTime + animation6.duration;</span><br><span class="line">    //进行改变</span><br><span class="line">    animation7.toValue = (id)[UIColor greenColor].CGColor;</span><br><span class="line">    //保持动画结束之后的状态</span><br><span class="line">    animation7.fillMode = kCAFillModeForwards;</span><br><span class="line">    animation7.removedOnCompletion = NO;</span><br><span class="line">    </span><br><span class="line">    //创建动画组</span><br><span class="line">    CAAnimationGroup *animationGroup = [[CAAnimationGroup alloc]init];</span><br><span class="line">    //动画执行周期</span><br><span class="line">    animationGroup.duration = animation7.beginTime + animation7.duration;</span><br><span class="line">    //添加动画到动画组</span><br><span class="line">    animationGroup.animations = @[animation1,animation2,animation3,animation4,animation5,animation6,animation7];</span><br><span class="line">    //保持动画结束之后的状态</span><br><span class="line">    animationGroup.fillMode = kCAFillModeForwards;</span><br><span class="line">    animationGroup.removedOnCompletion = NO;</span><br><span class="line">    </span><br><span class="line">    //视图添加动画</span><br><span class="line">    [self.btn.layer addAnimation:animationGroup forKey:@&quot;animation&quot;];</span><br></pre></td></tr></table></figure>

<p>###效果<br><img src="http://upload-images.jianshu.io/upload_images/1897259-5814460310038a17.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果"></p>
<p><a href="https://github.com/CCSH/SHAnimation" target="_blank" rel="noopener">代码地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 封装控件之日历</title>
    <url>/2019/12/26/iOS%20%E5%B0%81%E8%A3%85%E6%8E%A7%E4%BB%B6%E4%B9%8B%E6%97%A5%E5%8E%86/</url>
    <content><![CDATA[<a id="more"></a>
<p><img src="https://upload-images.jianshu.io/upload_images/1897259-24386b39e2637f3b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果"></p>
<p><a href="https://github.com/CCSH/SHCalendar" target="_blank" rel="noopener">代码地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>封装</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 封装控件之表情键盘</title>
    <url>/2019/12/26/iOS%20%E5%B0%81%E8%A3%85%E6%8E%A7%E4%BB%B6%E4%B9%8B%E8%A1%A8%E6%83%85%E9%94%AE%E7%9B%98/</url>
    <content><![CDATA[<a id="more"></a>
<p><img src="https://upload-images.jianshu.io/upload_images/1897259-a9577865d7b15769.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果"></p>
<p><a href="https://github.com/CCSH/SHEmotionKeyboard" target="_blank" rel="noopener">代码地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>封装</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 封装控件之音视频播放</title>
    <url>/2019/12/26/iOS%20%E5%B0%81%E8%A3%85%E6%8E%A7%E4%BB%B6%E4%B9%8B%E9%9F%B3%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE/</url>
    <content><![CDATA[<ul>
<li>音频播放</li>
<li>视频播放</li>
<li>本地播放、网络播放、边下边播</li>
<li>缓存进度</li>
<li>播放进度</li>
<li>自动播放</li>
<li>音频后台播放</li>
<li>全屏播放(demo 中有方法)</li>
<li>拖拽进度</li>
<li>锁屏显示</li>
<li>ios 9.1 以上支持 锁屏拖拽进度播放</li>
<li>耳机控制</li>
<li>锁屏控制 播放、暂停、下一首、上一首等<br><img src="https://upload-images.jianshu.io/upload_images/1897259-8b078f13990a29a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果"></li>
</ul>
<p><a href="https://github.com/CCSH/SHAVPlayer" target="_blank" rel="noopener">代码地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>封装</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 屏幕强制旋转 (模态、Push、导航栏、状态栏)</title>
    <url>/2019/12/26/iOS%20%E5%B1%8F%E5%B9%95%E5%BC%BA%E5%88%B6%E6%97%8B%E8%BD%AC%20(%E6%A8%A1%E6%80%81%E3%80%81Push%E3%80%81%E5%AF%BC%E8%88%AA%E6%A0%8F%E3%80%81%E7%8A%B6%E6%80%81%E6%A0%8F)/</url>
    <content><![CDATA[<a id="more"></a>
<p><a href="http://www.jianshu.com/p/f4218b16dd72" target="_blank" rel="noopener">状态栏旋转详见</a></p>
<p>###界面旋转准备</p>
<ul>
<li>在AppDelegate.h中添加属性</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//是否旋转</span><br><span class="line">@property (nonatomic, assign) BOOL isRotation;</span><br></pre></td></tr></table></figure>

<ul>
<li>在AppDelegate.m中添加方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window &#123;</span><br><span class="line">    </span><br><span class="line">    if (self.isRotation) &#123;</span><br><span class="line">        //可以针对不同的界面创建不同的值，进行返回</span><br><span class="line">        return UIInterfaceOrientationMaskLandscape;</span><br><span class="line">    &#125;</span><br><span class="line">    return UIInterfaceOrientationMaskPortrait;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>进入正题，找到需要旋转的界面</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (IBAction)btnClick:(id)sender &#123;</span><br><span class="line">    NSLog(@&quot;旋转&quot;);</span><br><span class="line">    //支持旋转</span><br><span class="line">    AppDelegate *app = (AppDelegate *)[UIApplication sharedApplication].delegate;</span><br><span class="line">    app.isRotation = YES;</span><br><span class="line"></span><br><span class="line">    [self interfaceOrientation:UIInterfaceOrientationLandscapeLeft];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)interfaceOrientation:(UIInterfaceOrientation)orientation</span><br><span class="line">&#123;</span><br><span class="line">    //强制转换</span><br><span class="line">    if ([[UIDevice currentDevice] respondsToSelector:@selector(setOrientation:)]) &#123;</span><br><span class="line">        </span><br><span class="line">        SEL selector = NSSelectorFromString(@&quot;setOrientation:&quot;);</span><br><span class="line">        NSInvocation * invocation = [NSInvocation invocationWithMethodSignature:[UIDevice instanceMethodSignatureForSelector:selector]];</span><br><span class="line">        [invocation setSelector:selector];</span><br><span class="line">        [invocation setTarget:[UIDevice currentDevice]];</span><br><span class="line">        int val = orientation;</span><br><span class="line">        [invocation setArgument:&amp;val atIndex:2];</span><br><span class="line">        [invocation invoke];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)viewWillDisappear:(BOOL)animated&#123;</span><br><span class="line">    [super viewWillDisappear:animated];</span><br><span class="line">    </span><br><span class="line">    //关闭旋转(恢复原状)</span><br><span class="line">    AppDelegate *app = (AppDelegate *)[UIApplication sharedApplication].delegate;</span><br><span class="line">    app.isRotation = NO;</span><br><span class="line">    </span><br><span class="line">    [self interfaceOrientation:UIInterfaceOrientationPortrait];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>需要注意的是这个值可以在你真的需要旋转的时候进行赋值，比如在视频播放的时候全屏点击的时候进行处理</p>
</blockquote>
<p><a href="https://github.com/CCSH/SHInterfaceRotation" target="_blank" rel="noopener">另附上代码地址仅供参考</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>tableview</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 屏幕旋转之后状态栏显示问题</title>
    <url>/2019/12/26/iOS%20%E5%B1%8F%E5%B9%95%E6%97%8B%E8%BD%AC%E4%B9%8B%E5%90%8E%E7%8A%B6%E6%80%81%E6%A0%8F%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<a id="more"></a>
<p><a href="http://www.jianshu.com/p/07641385799d" target="_blank" rel="noopener">屏幕强制旋转详见</a></p>
<p>在Info.plist 添加</p>
<p>键值：View controller-based status bar appearance</p>
<p>参数：NO</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">//在AppDelegate</span><br><span class="line"></span><br><span class="line">//- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions添加如下代码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[[UIApplication sharedApplication] setStatusBarHidden:YES withAnimation:UIStatusBarAnimationNone];</span><br><span class="line"></span><br><span class="line">[[UIApplication sharedApplication] setStatusBarHidden:NO withAnimation:UIStatusBarAnimationNone];</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
  </entry>
  <entry>
    <title>iOS 关于子视图超出父视图后无法响应点击事件的处理办法</title>
    <url>/2019/12/26/iOS%20%E5%85%B3%E4%BA%8E%E5%AD%90%E8%A7%86%E5%9B%BE%E8%B6%85%E5%87%BA%E7%88%B6%E8%A7%86%E5%9B%BE%E5%90%8E%E6%97%A0%E6%B3%95%E5%93%8D%E5%BA%94%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6%E7%9A%84%E5%A4%84%E7%90%86%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<p>关于子视图超出父视图后无法响应点击事件的处理办法</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (UIView *)hitTest:(CGPoint)point withEvent:(UIEvent *)event &#123;</span><br><span class="line">    </span><br><span class="line">    for (UIView *view in self.subviews) &#123;</span><br><span class="line"></span><br><span class="line">        CGPoint viewP = [self convertPoint:point toView:view];</span><br><span class="line">        </span><br><span class="line">        if ([view pointInside:viewP withEvent:event]) &#123;</span><br><span class="line">            return view;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return [super hitTest:point withEvent:event];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中Btn就是在self上超出的控件</p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 内存泄漏问题</title>
    <url>/2019/12/26/iOS%20%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<a id="more"></a>
<p>User-facing text should use localized string macro</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-4f662f75e499001a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改为NO"></p>
<p>Value stored to ‘XXX’ is never read<br>这个变量发现只是被赋值并没有被使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">实例化 XXX = nil;</span><br><span class="line">XXX = 。。。。</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 各种返回上一界面</title>
    <url>/2019/12/26/iOS%20%E5%90%84%E7%A7%8D%E8%BF%94%E5%9B%9E%E4%B8%8A%E4%B8%80%E7%95%8C%E9%9D%A2/</url>
    <content><![CDATA[<p>各种返回上一界面</p>
<a id="more"></a>
<p>返回上一界面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[self.navigationController popViewControllerAnimated:&lt;#(BOOL)#&gt;];</span><br></pre></td></tr></table></figure>

<p>返回跟视图</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[self.navigationController popToRootViewControllerAnimated:&lt;#(BOOL)#&gt;];</span><br></pre></td></tr></table></figure>

<p>返回指定界面（两种）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark 第一种</span><br><span class="line">[self.navigationController popToViewController:[self.navigationController.viewControllers objectAtIndex: 1] animated:YES];</span><br><span class="line">#pragma mark 第二种</span><br><span class="line">for (UIViewController *controller in self.navigationController.viewControllers) &#123;</span><br><span class="line">    if ([controller isKindOfClass:[你要跳转到的Controller class]]) &#123;</span><br><span class="line">        [self.navigationController popToViewController:controller animated:YES];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 启动图全屏（状态栏隐藏）</title>
    <url>/2019/12/26/iOS%20%E5%90%AF%E5%8A%A8%E5%9B%BE%E5%85%A8%E5%B1%8F%EF%BC%88%E7%8A%B6%E6%80%81%E6%A0%8F%E9%9A%90%E8%97%8F%EF%BC%89/</url>
    <content><![CDATA[<a id="more"></a>
<p>在Info.plist中增加一个配置即可：Status bar is initially hidden    为YES</p>
<p>这里的YES表示在app初始化(启动)的时候就隐藏状态栏。</p>
<p>当然，在Default.png显示完毕后状态栏还是隐藏的。如果想重新显示状态栏，补上下面代码即可：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[UIApplication sharedApplication].statusBarHidden = NO;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 复制文字信息到剪切板</title>
    <url>/2019/12/26/iOS%20%E5%A4%8D%E5%88%B6%E6%96%87%E5%AD%97%E4%BF%A1%E6%81%AF%E5%88%B0%E5%89%AA%E5%88%87%E6%9D%BF/</url>
    <content><![CDATA[<p>复制文字信息到剪切板</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[[UIPasteboard generalPasteboard] setString:@&quot;123&quot;];</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 封装控件之AlertView</title>
    <url>/2019/12/26/iOS%20%E5%B0%81%E8%A3%85%E6%8E%A7%E4%BB%B6%E4%B9%8BAlertView/</url>
    <content><![CDATA[<a id="more"></a>
<p><img src="https://upload-images.jianshu.io/upload_images/1897259-97b8ccadd859011b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果"></p>
<p><a href="https://github.com/CCSH/SHAlertView" target="_blank" rel="noopener">代码地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>封装</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS tableview footerview、headerview悬浮处理</title>
    <url>/2019/12/26/iOS%20tableview%20footerview%E3%80%81headerview%E6%82%AC%E6%B5%AE%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<p>悬浮处理</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//去掉UItableview的section的headerview悬浮</span><br><span class="line">CGFloat sectionHeaderH = 10;</span><br><span class="line">if (scrollView.contentOffset.y&lt;=sectionHeaderH &amp;&amp; scrollView.contentOffset.y&gt;=0) &#123;</span><br><span class="line">    scrollView.contentInset = UIEdgeInsetsMake(-scrollView.contentOffset.y, 0, 0, 0);</span><br><span class="line">&#125; else if (scrollView.contentOffset.y&gt;=sectionHeaderH) &#123;</span><br><span class="line">    scrollView.contentInset = UIEdgeInsetsMake(-sectionHeaderH, 0, 0, 0);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    scrollView.contentInset = UIEdgeInsetsZero;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//去掉UItableview的section的footerview悬浮</span><br><span class="line">CGFloat sectionFooterH = 10;</span><br><span class="line">if (scrollView.contentOffset.y&lt;=sectionFooterH &amp;&amp; scrollView.contentOffset.y&gt;=0) &#123;</span><br><span class="line">    scrollView.contentInset = UIEdgeInsetsMake(0, 0, -sectionFooterH, 0);</span><br><span class="line">&#125; else if (scrollView.contentOffset.y&gt;= sectionFooterH) &#123;</span><br><span class="line">    scrollView.contentInset = UIEdgeInsetsMake(0, 0, -sectionFooterH, 0);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    scrollView.contentInset = UIEdgeInsetsZero;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>同时使用或者其他地方涉及到 contentInset 修改时记得处理</p>
<blockquote>
<p>其实不管是头部悬浮还是底部悬浮都是修改 <em>contentInset</em> 它其实还是悬浮只是在界面中看不到了</p>
</blockquote>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 仿写项目之微信聊天界面、QQ聊天界面</title>
    <url>/2019/12/26/iOS%20%E4%BB%BF%E5%86%99%E9%A1%B9%E7%9B%AE%E4%B9%8B%E5%BE%AE%E4%BF%A1%E8%81%8A%E5%A4%A9%E7%95%8C%E9%9D%A2%E3%80%81QQ%E8%81%8A%E5%A4%A9%E7%95%8C%E9%9D%A2/</url>
    <content><![CDATA[<a id="more"></a>
<p><img src="https://upload-images.jianshu.io/upload_images/1897259-e4c047b16de11c93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果"></p>
<p><a href="https://github.com/CCSH/SHChatMessageUI" target="_blank" rel="noopener">代码地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>封装</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 仿写项目之朋友圈</title>
    <url>/2019/12/26/iOS%20%E4%BB%BF%E5%86%99%E9%A1%B9%E7%9B%AE%E4%B9%8B%E6%9C%8B%E5%8F%8B%E5%9C%88/</url>
    <content><![CDATA[<a id="more"></a>
<p><img src="https://upload-images.jianshu.io/upload_images/1897259-6995e586b48c973d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果"></p>
<p><a href="https://github.com/CCSH/SHFriendTimeLineUI" target="_blank" rel="noopener">代码地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>封装</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 保存图片或者视图到本地相册</title>
    <url>/2019/12/26/iOS%20%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E6%88%96%E8%80%85%E8%A7%86%E5%9B%BE%E5%88%B0%E6%9C%AC%E5%9C%B0%E7%9B%B8%E5%86%8C/</url>
    <content><![CDATA[<p>保存图片或者视图到本地相册</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - 保存视图</span><br><span class="line">   </span><br><span class="line">   UIGraphicsBeginImageContextWithOptions(view.size, NO, 0.0);</span><br><span class="line">    [view.layer renderInContext:UIGraphicsGetCurrentContext()];</span><br><span class="line">    UIImage *viewImage = UIGraphicsGetImageFromCurrentImageContext();</span><br><span class="line">    UIGraphicsEndImageContext();</span><br><span class="line">    </span><br><span class="line">    ALAssetsLibrary *assetsLibrary = [[ALAssetsLibrary alloc]init];</span><br><span class="line">    </span><br><span class="line">    [assetsLibrary writeImageToSavedPhotosAlbum:[viewImage CGImage] orientation:(ALAssetOrientation)viewImage.imageOrientation completionBlock:^(NSURL *assetURL, NSError *error) &#123;</span><br><span class="line">        [SHToast showWithText:@&quot;保存成功&quot;];</span><br><span class="line">    &#125;];</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 修改手机定位(临时)</title>
    <url>/2019/12/26/iOS%20%E4%BF%AE%E6%94%B9%E6%89%8B%E6%9C%BA%E5%AE%9A%E4%BD%8D(%E4%B8%B4%E6%97%B6)/</url>
    <content><![CDATA[<a id="more"></a>
<p>1、新建Xcode工程<br>2、创建gpx文件<br><img src="https://upload-images.jianshu.io/upload_images/1897259-4bf7aa7b986da565.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>3、编辑gpx文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;gpx version=&quot;1.1&quot; creator=&quot;Xcode&quot; &gt;</span><br><span class="line">        &lt;!--</span><br><span class="line">         高德坐标 https://lbs.amap.com/console/show/picker</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;!--</span><br><span class="line">         高德坐标转wgs84 http://www.dituwa.com/tool/gpxaxes</span><br><span class="line">         --&gt;</span><br><span class="line">&lt;!--        下方需要wgs84坐标 不是的需要转换--&gt;</span><br><span class="line">        &lt;!--    银多网--&gt;</span><br><span class="line">        &lt;wpt lat=&quot;45.73832803&quot; lon=&quot;126.66123930&quot;&gt;</span><br><span class="line">    &lt;/wpt&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/gpx&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>需要经过坐标转换之后才可以使用<br><a href="https://lbs.amap.com/console/show/picker" target="_blank" rel="noopener">坐标查询</a><br><a href="http://www.dituwa.com/tool/gpxaxes" target="_blank" rel="noopener">wgs84转换工具</a></p>
</blockquote>
<p>4、设置scheme<br><img src="https://upload-images.jianshu.io/upload_images/1897259-f37cc3e23c841b83.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<blockquote>
<p>没有的话编译一次</p>
</blockquote>
<p>5、运行到手机即可看到效果 停止工程或者过一段时间定位就会恢复原状</p>
<p><a href="[https://github.com/CCSH/Modify_Mobile_GPS">代码地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 关于UITableviewWrapperview显示不正确问题</title>
    <url>/2019/12/26/iOS%20%E5%85%B3%E4%BA%8EUITableviewWrapperview%E6%98%BE%E7%A4%BA%E4%B8%8D%E6%AD%A3%E7%A1%AE%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>问题：就算是设置了<code>automaticallyAdjustsScrollViewInsets = NO</code> 或者 <code>contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;</code> 不起作用 查看显示<code>UITableviewWrapperview</code> 与 <code>UITableView</code> 位置不一致</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//添加一个UIScrollView到最下层，让UIViewController去自动适配你添加的这个</span><br><span class="line">if (!self.sh_scroll) &#123;</span><br><span class="line">    self.sh_scroll = [[UIScrollView alloc]init];</span><br><span class="line">    [self.view addSubview:self.sh_scroll];</span><br><span class="line">&#125;</span><br><span class="line">[self.view sendSubviewToBack:self.sh_scroll];</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS SDWebImage缓存类型</title>
    <url>/2019/12/26/iOS%20SDWebImage%E7%BC%93%E5%AD%98%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<p>SDWebImage缓存类型</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. sd_setImageWithURL：</span><br><span class="line"></span><br><span class="line">//图片缓存的基本代码，就是这么简单</span><br><span class="line"></span><br><span class="line">[self.image1 sd_setImageWithURL:imagePath1];</span><br><span class="line"></span><br><span class="line">2. sd_setImageWithURL:  completed:</span><br><span class="line"></span><br><span class="line">//用block 可以在图片加载完成之后做些事情</span><br><span class="line"></span><br><span class="line">[self.image2 sd_setImageWithURL:imagePath2 completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) &#123;</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;这里可以在图片加载完成之后做些事情&quot;);</span><br><span class="line"></span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">3. sd_setImageWithURL:  placeholderImage:</span><br><span class="line"></span><br><span class="line">//给一张默认图片，先使用默认图片，当图片加载完成后再替换</span><br><span class="line"></span><br><span class="line">[self.image1 sd_setImageWithURL:imagePath1 placeholderImage:[UIImage imageNamed:@&quot;default&quot;]];</span><br><span class="line"></span><br><span class="line">4. sd_setImageWithURL:  placeholderImage:  completed:</span><br><span class="line"></span><br><span class="line">//使用默认图片，而且用block 在完成后做一些事情</span><br><span class="line"></span><br><span class="line">[self.image1 sd_setImageWithURL:imagePath1 placeholderImage:[UIImage imageNamed:@&quot;default&quot;] completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) &#123;</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;图片加载完成后做的事情&quot;);</span><br><span class="line"></span><br><span class="line">&#125;];</span><br><span class="line"></span><br><span class="line">5. sd_setImageWithURL:  placeholderImage:  options:</span><br><span class="line"></span><br><span class="line">//options 选择方式</span><br><span class="line"></span><br><span class="line">[self.image1 sd_setImageWithURL:imagePath1 placeholderImage:[UIImage imageNamed:@&quot;default&quot;] options:SDWebImageRetryFailed];</span><br><span class="line"></span><br><span class="line">一、options所有选项：</span><br><span class="line"></span><br><span class="line">//失败后重试</span><br><span class="line"></span><br><span class="line">SDWebImageRetryFailed = 1 &lt;&lt; 0,</span><br><span class="line"></span><br><span class="line">//UI交互期间开始下载，导致延迟下载比如UIScrollView减速。</span><br><span class="line"></span><br><span class="line">SDWebImageLowPriority = 1 &lt;&lt; 1,</span><br><span class="line"></span><br><span class="line">//只进行内存缓存</span><br><span class="line"></span><br><span class="line">SDWebImageCacheMemoryOnly = 1 &lt;&lt; 2,</span><br><span class="line"></span><br><span class="line">//这个标志可以渐进式下载,显示的图像是逐步在下载</span><br><span class="line"></span><br><span class="line">SDWebImageProgressiveDownload = 1 &lt;&lt; 3,</span><br><span class="line"></span><br><span class="line">//刷新缓存</span><br><span class="line"></span><br><span class="line">SDWebImageRefreshCached = 1 &lt;&lt; 4,</span><br><span class="line"></span><br><span class="line">//后台下载</span><br><span class="line"></span><br><span class="line">SDWebImageContinueInBackground = 1 &lt;&lt; 5,</span><br><span class="line"></span><br><span class="line">//NSMutableURLRequest.HTTPShouldHandleCookies = YES;</span><br><span class="line"></span><br><span class="line">SDWebImageHandleCookies = 1 &lt;&lt; 6,</span><br><span class="line"></span><br><span class="line">//允许使用无效的SSL证书</span><br><span class="line"></span><br><span class="line">//SDWebImageAllowInvalidSSLCertificates = 1 &lt;&lt; 7,</span><br><span class="line"></span><br><span class="line">//优先下载</span><br><span class="line"></span><br><span class="line">SDWebImageHighPriority = 1 &lt;&lt; 8,</span><br><span class="line"></span><br><span class="line">//延迟占位符</span><br><span class="line"></span><br><span class="line">SDWebImageDelayPlaceholder = 1 &lt;&lt; 9,</span><br><span class="line"></span><br><span class="line">//改变动画形象</span><br><span class="line"></span><br><span class="line">SDWebImageTransformAnimatedImage = 1 &lt;&lt; 10,</span><br><span class="line"></span><br><span class="line">二、SDImageCacheType所有选项：</span><br><span class="line"></span><br><span class="line">SDImageCacheType 当下载请求结束时,通过这个枚举来告知图片的来源</span><br><span class="line"></span><br><span class="line">if (cacheType == SDImageCacheTypeNone) &#123;</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;网络&quot;);</span><br><span class="line"></span><br><span class="line">&#125;else if (cacheType == SDImageCacheTypeDisk) &#123;</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;设备硬盘&quot;);</span><br><span class="line"></span><br><span class="line">&#125;else if (cacheType == SDImageCacheTypeMemory) &#123;</span><br><span class="line"></span><br><span class="line">NSLog(@&quot;内存&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS Tabbar的一些设置(背景颜色、点击设置)</title>
    <url>/2019/12/26/iOS%20Tabbar%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%BE%E7%BD%AE(%E8%83%8C%E6%99%AF%E9%A2%9C%E8%89%B2%E3%80%81%E7%82%B9%E5%87%BB%E8%AE%BE%E7%BD%AE)/</url>
    <content><![CDATA[<a id="more"></a>
<p>设置底部标题点击时的颜色<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[[UITabBarItem appearance] setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:[UIColor whiteColor],NSForegroundColorAttributeName,nil] forState:UIControlStateNormal];</span><br><span class="line">    </span><br><span class="line">UIColor *titleHighlightedColor = [UIColor whiteColor];</span><br><span class="line">    </span><br><span class="line">[[UITabBarItem appearance] setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:titleHighlightedColor, NSForegroundColorAttributeName,nil] forState:UIControlStateSelected];</span><br></pre></td></tr></table></figure></p>
<p>设置tabbar选中颜色</p>
<p>iOS7设置如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[self.tabBarController.tabBarsetSelectedImageTintColor:[UIColor greenColor]];</span><br></pre></td></tr></table></figure>

<p>ios8中如下设置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">self.tabBar.tintColor=[UIColor greenColor];</span><br></pre></td></tr></table></figure>

<p>消除tabbar边框<br>在appdelegate的程序启动处：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[[UITabBar appearance] setShadowImage:[[UIImage alloc]init]];</span><br><span class="line"></span><br><span class="line">[[UITabBar appearance] setBackgroundImage:[[UIImage alloc]init]];</span><br></pre></td></tr></table></figure>

<p>设置tabbar item原始图标与原始选中图标，而不是系统自动填充的颜色</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">// 拿到 TabBar 在拿到想应的item</span><br><span class="line">UITabBar *tabBar = _tabBarController.tabBar;</span><br><span class="line">UITabBarItem *item0 = [tabBar.items objectAtIndex:0];</span><br><span class="line">UITabBarItem *item1 = [tabBar.items objectAtIndex:1];</span><br><span class="line">UITabBarItem *item2 = [tabBar.items objectAtIndex:2];</span><br><span class="line">UITabBarItem *item3 = [tabBar.items objectAtIndex:3];</span><br><span class="line">// 对item设置相应地图片</span><br><span class="line">item0.selectedImage = [[UIImage imageNamed:@&quot;recognize-1&quot;] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];;</span><br><span class="line">item0.image = [[UIImage imageNamed:@&quot;recognize&quot;] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];</span><br><span class="line"> </span><br><span class="line">item1.selectedImage = [[UIImage imageNamed:@&quot;life-1&quot;] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];;</span><br><span class="line">item1.image = [[UIImage imageNamed:@&quot;life&quot;] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];</span><br><span class="line"> </span><br><span class="line">item2.selectedImage = [[UIImage imageNamed:@&quot;edit-1&quot;] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];;</span><br><span class="line">item2.image = [[UIImage imageNamed:@&quot;edit&quot;] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];</span><br><span class="line"> </span><br><span class="line">item3.selectedImage = [[UIImage imageNamed:@&quot;setting-1&quot;] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];;</span><br><span class="line">item3.image = [[UIImage imageNamed:@&quot;setting&quot;] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];</span><br></pre></td></tr></table></figure>

<p>设置tabbar背景图片</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UIView *backView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Main_Screen_Width, 49)];</span><br><span class="line">backView.backgroundColor = [UIColor redColor];</span><br><span class="line">[self.tabBar insertSubview:backView atIndex:0];</span><br><span class="line">self.tabBar.opaque = YES;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS UITextField文字监听</title>
    <url>/2019/12/26/iOS%20UITextField%E6%96%87%E5%AD%97%E7%9B%91%E5%90%AC/</url>
    <content><![CDATA[<p>UITextField文字监听</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//添加监听</span><br><span class="line">[self.textFiled addTarget:self action:@selector(textFieldTextDidChange:) forControlEvents:UIControlEventEditingChanged];</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//监听改变方法</span><br><span class="line">- (void)textFieldTextDidChange:(UITextField *)textChange&#123;</span><br><span class="line">    NSLog(@&quot;文字改变：%@&quot;,textChange.text);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS Xcode 自动打包，一键上传AppStore脚本</title>
    <url>/2019/12/26/iOS%20Xcode%20%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85%EF%BC%8C%E4%B8%80%E9%94%AE%E4%B8%8A%E4%BC%A0AppStore%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<a id="more"></a>
<p>其中AdHocExportOptions、AppStoreExportOptions、DevelopmentExportOptions、EnterpriseExportOptions<br>plist文件是Xcode打包过后的<br><img src="https://upload-images.jianshu.io/upload_images/1897259-bcda63dc64a54eab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4种打包类型"></p>
<p> <img src="https://upload-images.jianshu.io/upload_images/1897259-0ef6eff64d945653.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="plist文件"><br>将名字修改完替换即可，生成4种类型的plist</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"># 使用方法</span><br><span class="line"># 1.将autoarchive.sh和附件中的plist，放在一起，新建文件夹为Shell，将这几文件复制进去，然后复制Shell文件夹到工程的根目录</span><br><span class="line"># 2.终端cd到Shell下，执行脚本 格式为 sh 脚本名字.sh</span><br><span class="line"></span><br><span class="line"># 配置信息</span><br><span class="line">#工程名字</span><br><span class="line">target_name=&quot;xxx&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;\033[32m****************\n开始自动打包\n****************\033[0m\n&quot;</span><br><span class="line"></span><br><span class="line"># ==========自动打包配置信息部分========== #</span><br><span class="line"></span><br><span class="line">#工程中Target对应的配置plist文件名称, Xcode默认的配置文件为Info.plist</span><br><span class="line">info_plist_name=&quot;Info&quot;</span><br><span class="line">#返回上一级目录,进入项目工程目录</span><br><span class="line">cd ..</span><br><span class="line">#获取项目名称</span><br><span class="line">project_name=`find . -name *.Xcodeproj | awk -F &quot;[/.]&quot; &apos;&#123;print $(NF-1)&#125;&apos;`</span><br><span class="line">#获取工程plist配置文件</span><br><span class="line">info_plist_path=&quot;$project_name/$info_plist_name.plist&quot;</span><br><span class="line"></span><br><span class="line">#获取版本号</span><br><span class="line">bundle_version=`/usr/libexec/PlistBuddy -c &quot;Print CFBundleShortVersionString&quot; $info_plist_path`</span><br><span class="line"></span><br><span class="line">#设置build版本号（可以不进行设置）</span><br><span class="line">date=`date +&quot;%Y%m%d%H%M&quot;`</span><br><span class="line">/usr/libexec/PlistBuddy -c &quot;Set :CFBundleVersion $date&quot; &quot;$info_plist_path&quot;</span><br><span class="line"></span><br><span class="line">#获取build版本号</span><br><span class="line">bundle_build_version=`/usr/libexec/PlistBuddy -c &quot;Print CFBundleVersion&quot; $info_plist_path`</span><br><span class="line"></span><br><span class="line">#强制删除旧的文件夹</span><br><span class="line">rm -rf ./$target_name-IPA</span><br><span class="line">#指定输出ipa路径</span><br><span class="line">export_path=./$target_name-IPA</span><br><span class="line">#指定输出归档文件地址</span><br><span class="line">export_archive_path=&quot;$export_path/$target_name.xcarchive&quot;</span><br><span class="line">#指定输出ipa地址</span><br><span class="line">export_ipa_path=&quot;$export_path&quot;</span><br><span class="line">#指定输出ipa名称 : target_name + bundle_version + bundle_build_version</span><br><span class="line">ipa_name=&quot;$target_name-V$bundle_version($bundle_build_version)&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;\033[32m****************\n自动打包选择配置部分\n****************\033[0m\n&quot;</span><br><span class="line"></span><br><span class="line"># ==========自动打包可选择信息部分========== #</span><br><span class="line"></span><br><span class="line"># 输入是否为工作空间</span><br><span class="line">archiveRun () &#123;</span><br><span class="line">    #是否是工作空间</span><br><span class="line">    echo &quot;\033[36;1m是否是工作空间(输入序号, 按回车即可) \033[0m&quot;</span><br><span class="line">    echo &quot;\033[33;1m1. 是 \033[0m&quot;</span><br><span class="line">    echo &quot;\033[33;1m2. 否 \033[0m&quot;</span><br><span class="line">    #读取用户输入</span><br><span class="line">    read is_workspace_parame</span><br><span class="line">    sleep 0.5</span><br><span class="line"></span><br><span class="line">    if [ &quot;$is_workspace_parame&quot; == &quot;1&quot; ]</span><br><span class="line">    then</span><br><span class="line">        echo &quot;\033[32m****************\n您选择了是工作空间 将采用：xcworkspace\n****************\033[0m\n&quot;</span><br><span class="line">    elif [ &quot;$is_workspace_parame&quot; == &quot;2&quot; ]</span><br><span class="line">    then</span><br><span class="line">        echo &quot;\033[32m****************\n您选择了不是工作空间 将采用：Xcodeproj\n****************\033[0m\n&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;\n\033[31;1m**************** 您输入的参数,无效请重新输入!!! ****************\033[0m\n&quot;</span><br><span class="line">        archiveRun</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">archiveRun</span><br><span class="line"></span><br><span class="line"># 输入打包模式</span><br><span class="line">configurationRun () &#123;</span><br><span class="line">    echo &quot;\033[36;1m请选择打包模式(输入序号, 按回车即可) \033[0m&quot;</span><br><span class="line">    echo &quot;\033[33;1m1. Release \033[0m&quot;</span><br><span class="line">    echo &quot;\033[33;1m2. Debug \033[0m&quot;</span><br><span class="line">    #读取用户输入</span><br><span class="line">    read build_configuration_param</span><br><span class="line">    sleep 0.5</span><br><span class="line"></span><br><span class="line">    if [ &quot;$build_configuration_param&quot; == &quot;1&quot; ]; then</span><br><span class="line">        build_configuration=&quot;Release&quot;</span><br><span class="line">    elif [ &quot;$build_configuration_param&quot; == &quot;2&quot; ]; then</span><br><span class="line">        build_configuration=&quot;Debug&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;\n\033[31;1m**************** 您输入的参数,无效请重新输入!!! ****************\033[0m\n&quot;</span><br><span class="line">        configurationRun</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">configurationRun</span><br><span class="line"></span><br><span class="line">echo &quot;\033[32m****************\n您选择了 $build_configuration 模式\n****************\033[0m\n&quot;</span><br><span class="line"></span><br><span class="line"># 输入打包类型</span><br><span class="line">methodRun () &#123;</span><br><span class="line">    # 输入打包类型</span><br><span class="line">    echo &quot;\033[36;1m请选择打包方式(输入序号, 按回车即可) \033[0m&quot;</span><br><span class="line">    echo &quot;\033[33;1m1. AdHoc \033[0m&quot;</span><br><span class="line">    echo &quot;\033[33;1m2. AppStore \033[0m&quot;</span><br><span class="line">    echo &quot;\033[33;1m3. Enterprise \033[0m&quot;</span><br><span class="line">    echo &quot;\033[33;1m4. Development \033[0m\n&quot;</span><br><span class="line">    #读取用户输入</span><br><span class="line">    read method_param</span><br><span class="line">    sleep 0.5</span><br><span class="line"></span><br><span class="line">    if [ &quot;$method_param&quot; == &quot;1&quot; ]; then</span><br><span class="line">        exportOptionsPlistPath=&quot;AdHocExportOptions&quot;</span><br><span class="line">        echo &quot;\033[32m****************\n您选择了 AdHoc 打包类型\n****************\033[0m\n&quot;</span><br><span class="line">    elif [ &quot;$method_param&quot; == &quot;2&quot; ]; then</span><br><span class="line">        exportOptionsPlistPath=&quot;AppStoreExportOptions&quot;</span><br><span class="line">        echo &quot;\033[32m****************\n您选择了 AppStore 打包类型\n****************\033[0m\n&quot;</span><br><span class="line">    elif [ &quot;$method_param&quot; == &quot;3&quot; ]; then</span><br><span class="line">        exportOptionsPlistPath=&quot;EnterpriseExportOptions&quot;</span><br><span class="line">        echo &quot;\033[32m****************\n您选择了 Enterprise 打包类型\n****************\033[0m\n&quot;</span><br><span class="line">    elif [ &quot;$method_param&quot; == &quot;4&quot; ]; then</span><br><span class="line">        exportOptionsPlistPath=&quot;DevelopmentExportOptions&quot;</span><br><span class="line">        echo &quot;\033[32m****************\n您选择了 Development 打包类型\n****************\033[0m\n&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;\n\033[31;1m**************** 您输入的参数,无效请重新输入!!! ****************\033[0m\n&quot;</span><br><span class="line">        methodRun</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">methodRun</span><br><span class="line"></span><br><span class="line"># 输入上传类型</span><br><span class="line">publishRun () &#123;</span><br><span class="line">    # 输入打包类型</span><br><span class="line">    echo &quot;\033[36;1m请选择上传类型(输入序号, 按回车即可) \033[0m&quot;</span><br><span class="line">    echo &quot;\033[33;1m1. 不上传 \033[0m&quot;</span><br><span class="line">    echo &quot;\033[33;1m2. AppStore \033[0m&quot;</span><br><span class="line">    #读取用户输入</span><br><span class="line">    read publish_param</span><br><span class="line">    sleep 0.5</span><br><span class="line"></span><br><span class="line">    if [ &quot;$publish_param&quot; == &quot;1&quot; ]; then</span><br><span class="line">        echo &quot;\033[32m****************\n您选择了不上传\n****************\033[0m\n&quot;</span><br><span class="line">    elif [ &quot;$publish_param&quot; == &quot;2&quot; ]; then</span><br><span class="line">        echo &quot;\033[32m****************\n您选择了上传 AppStore\n****************\033[0m\n&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;\n\033[31;1m**************** 您输入的参数,无效请重新输入!!! ****************\033[0m\n&quot;</span><br><span class="line">        publishRun</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">publishRun</span><br><span class="line"></span><br><span class="line">#选择了2、Release、AppStore</span><br><span class="line">if [ &quot;$method_param&quot; == &quot;2&quot; -a &quot;$build_configuration&quot; == &quot;Release&quot; -a &quot;$publish_param&quot; == &quot;2&quot; ]</span><br><span class="line">then</span><br><span class="line">    #上传App Store</span><br><span class="line">    echo &quot;请输入开发者账号：&quot;</span><br><span class="line">    read username_param</span><br><span class="line">    sleep 0.5</span><br><span class="line"></span><br><span class="line">    echo &quot;请输入开发者账号密码：&quot;</span><br><span class="line">    read password_param</span><br><span class="line">    sleep 0.5</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;\033[32m****************\n打包信息配置完毕，输入回车开始进行打包\n****************\033[0m\n&quot;</span><br><span class="line">read start</span><br><span class="line">sleep 0.5</span><br><span class="line"></span><br><span class="line">echo &quot;\033[32m****************\n开始清理工程\n****************\033[0m\n&quot;</span><br><span class="line"></span><br><span class="line"># 删除旧的文件</span><br><span class="line">rm -rf &quot;$export_path&quot;</span><br><span class="line"># 指定输出文件目录不存在则创建</span><br><span class="line">if test -d &quot;$export_path&quot; ; then</span><br><span class="line">    echo $export_path</span><br><span class="line">else</span><br><span class="line">    mkdir -pv $export_path</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 清理工程</span><br><span class="line">Xcodebuild clean -configuration &quot;$build_configuration&quot; -alltargets</span><br><span class="line"></span><br><span class="line">echo &quot;\033[32m****************\n开始编译项目 $&#123;build_configuration&#125;  $&#123;exportOptionsPlistPath&#125;\n****************\033[0m\n&quot;</span><br><span class="line"></span><br><span class="line"># 开始编译</span><br><span class="line">if [ &quot;$is_workspace_parame&quot; == &quot;1&quot; ]</span><br><span class="line">then</span><br><span class="line">    #工作空间</span><br><span class="line">    Xcodebuild archive \</span><br><span class="line">    -workspace $&#123;project_name&#125;.xcworkspace \</span><br><span class="line">    -scheme $&#123;target_name&#125; \</span><br><span class="line">    -configuration $&#123;build_configuration&#125; \</span><br><span class="line">    -destination generic/platform=ios \</span><br><span class="line">    -archivePath $&#123;export_archive_path&#125;</span><br><span class="line">else</span><br><span class="line">    #不是工作空间</span><br><span class="line">    Xcodebuild archive \</span><br><span class="line">    -project $&#123;project_name&#125;.Xcodeproj \</span><br><span class="line">    -scheme $&#123;target_name&#125; \</span><br><span class="line">    -configuration $&#123;build_configuration&#125; \</span><br><span class="line">    -archivePath $&#123;export_archive_path&#125;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 检查是否构建成功</span><br><span class="line"># xcarchive 实际是一个文件夹不是一个文件所以使用 -d 判断</span><br><span class="line">if test -d &quot;$export_archive_path&quot; ; then</span><br><span class="line">    echo &quot;\033[32m****************\n项目编译成功\n****************\033[0m\n&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;\033[32m****************\n项目编译失败\n****************\033[0m\n&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;\033[32m****************\n开始导出ipa文件\n****************\033[0m\n&quot;</span><br><span class="line"></span><br><span class="line">#1、打包命令</span><br><span class="line">#2、归档文件地址</span><br><span class="line">#3、ipa输出地址</span><br><span class="line">#4、ipa打包设置文件地址</span><br><span class="line">Xcodebuild -exportArchive \</span><br><span class="line">-archivePath $&#123;export_archive_path&#125; \</span><br><span class="line">-configuration $&#123;build_configuration&#125; \</span><br><span class="line">-exportPath $&#123;export_ipa_path&#125;  \</span><br><span class="line">-exportOptionsPlist &quot;./Shell/$&#123;exportOptionsPlistPath&#125;.plist&quot;</span><br><span class="line"></span><br><span class="line"># 修改ipa文件名称</span><br><span class="line">mv $export_ipa_path/$target_name.ipa $export_ipa_path/$ipa_name.ipa</span><br><span class="line"></span><br><span class="line"># 检查文件是否存在</span><br><span class="line">if test -f &quot;$export_ipa_path/$ipa_name.ipa&quot; ; then</span><br><span class="line">    echo &quot;\033[32m****************\n导出 $ipa_name.ipa 包成功\n****************\033[0m\n&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;\033[32m****************\n导出 $ipa_name.ipa 包失败\n****************\033[0m\n&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 打开打包文件目录</span><br><span class="line">open $export_path</span><br><span class="line"></span><br><span class="line"># 输出</span><br><span class="line">echo &quot;\033[32m****************\n使用Shell脚本打包完毕\n****************\033[0m\n&quot;</span><br><span class="line"></span><br><span class="line">#上传 AppStore</span><br><span class="line">if [ -n &quot;$username_param&quot; -a -n &quot;$password_param&quot; -a &quot;$method_param&quot; == &quot;2&quot; -a &quot;$build_configuration&quot; == &quot;Release&quot; -a &quot;$publish_param&quot; == &quot;2&quot; ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;\033[32m****************\n开始上传AppStore\n****************\033[0m\n&quot;</span><br><span class="line">    #验证APP</span><br><span class="line">    altoolPath=&quot;/Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool&quot;</span><br><span class="line">    &quot;$&#123;altoolPath&#125;&quot; --validate-app \</span><br><span class="line">    -f &quot;$&#123;export_ipa_path&#125;/$&#123;ipa_name&#125;.ipa&quot; \</span><br><span class="line">    -u &quot;$username_param&quot; \</span><br><span class="line">    -p &quot;$password_param&quot; \</span><br><span class="line">    --output-format xml</span><br><span class="line">    #上传APP</span><br><span class="line">    &quot;$&#123;altoolPath&#125;&quot; --upload-app \</span><br><span class="line">    -f &quot;$&#123;export_ipa_path&#125;/$&#123;ipa_name&#125;.ipa&quot; \</span><br><span class="line">    -u &quot;$username_param&quot; \</span><br><span class="line">    -p &quot;$password_param&quot; \</span><br><span class="line">    --output-format xml</span><br><span class="line">    echo &quot;\033[32m****************\n上传AppStore完毕\n****************\033[0m\n&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/CCSH/Shell" target="_blank" rel="noopener">代码地址</a></p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>tableview</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS APP日志写入文件（日志收集）</title>
    <url>/2019/12/26/iOS%20APP%E6%97%A5%E5%BF%97%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6%EF%BC%88%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%EF%BC%89/</url>
    <content><![CDATA[<p>APP日志写入文件（日志收集）</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOption</span><br><span class="line">    //日志收集(日志会被拦截，开发的时候注掉)</span><br><span class="line">    [self redirectNSlogToDocumentFolder];</span><br></pre></td></tr></table></figure>

<p>方法实现</p>
<pre><code>#pragma mark - 日志收集
- (void)redirectNSlogToDocumentFolder
{
    NSString *documentDirectory = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0];

    NSDateFormatter *dateformat = [[NSDateFormatter  alloc]init];
    [dateformat setDateFormat:@&quot;yyyy-MM-dd-HH-mm-ss&quot;];
    NSString *fileName = [NSString stringWithFormat:@&quot;LOG-%@.txt&quot;,[dateformat stringFromDate:[NSDate date]]];
    NSString *logFilePath = [documentDirectory stringByAppendingPathComponent:fileName];

    // 先删除已经存在的文件
    NSFileManager *defaultManager = [NSFileManager defaultManager];
    [defaultManager removeItemAtPath:logFilePath error:nil];

    // 将log输入到文件
    freopen([logFilePath cStringUsingEncoding:NSASCIIStringEncoding], &quot;a+&quot;, stdout);

    freopen([logFilePath cStringUsingEncoding:NSASCIIStringEncoding], &quot;a+&quot;, stderr);
}</code></pre><p>在需要进行收集的时候将文件上传到服务器</p>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>方法</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS Block定义</title>
    <url>/2019/12/26/iOS%20Block%E5%AE%9A%E4%B9%89/</url>
    <content><![CDATA[<p>Block定义</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//直接定义</span><br><span class="line">@property (nonatomic, copy) void(^block)(NSInteger);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//方法中定义</span><br><span class="line">block:(void(^) (NSInteger index))block;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//其他定义</span><br><span class="line">typedef void(^Block)(NSInteger index);</span><br><span class="line"></span><br><span class="line">@property (nonatomic, copy) Block block;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS Pod 问题</title>
    <url>/2019/12/26/iOS%20Pod%20%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="突然出现-bash-pod-command-not-found-的解决方法"><a href="#突然出现-bash-pod-command-not-found-的解决方法" class="headerlink" title="突然出现 -bash: pod: command not found 的解决方法"></a>突然出现 -bash: pod: command not found 的解决方法</h1><a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mkdir -p $HOME/Software/ruby</span><br><span class="line">$ export GEM_HOME=$HOME/Software/ruby</span><br><span class="line">$ gem install cocoapods</span><br><span class="line">$ export PATH=$PATH:$HOME/Software/ruby/bin</span><br><span class="line">$ pod --version</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS QuickLook预览文件功能</title>
    <url>/2019/12/26/iOS%20QuickLook%E9%A2%84%E8%A7%88%E6%96%87%E4%BB%B6%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<a id="more"></a>

<p>1、想要使用此功能首先要在工程内加入框架</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">QuickLook.framework</span><br></pre></td></tr></table></figure>

<p>2、在你需要展示的界面加入头文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#import &lt;QuickLook/QuickLook.h&gt;</span><br></pre></td></tr></table></figure>

<p>3、实例化</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">QLPreviewController *myQlPreViewController = [[QLPreviewController alloc]init];</span><br><span class="line">myQlPreViewController.delegate =self;</span><br><span class="line">myQlPreViewController.dataSource =self;</span><br><span class="line">[myQlPreViewController setCurrentPreviewItemIndex:0];</span><br><span class="line">//此处可以带导航栏跳转、也可以不带导航栏跳转、也可以拿到View进行Add</span><br><span class="line">[self.navigationController pushViewController:myQlPreViewController animated:YES];</span><br></pre></td></tr></table></figure>

<p>4、代理方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - QLPreviewController代理</span><br><span class="line">- (NSInteger)numberOfPreviewItemsInPreviewController:(QLPreviewController *)controller</span><br><span class="line">&#123;</span><br><span class="line">    return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id&lt;QLPreviewItem&gt;)previewController:(QLPreviewController *)controller previewItemAtIndex:(NSInteger)index</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    NSString* path = [[NSBundle mainBundle] pathForResource:arr[IndeX] ofType:nil];</span><br><span class="line">    return [NSURL fileURLWithPath:path];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)previewControllerDidDismiss:(QLPreviewController *)controller</span><br><span class="line">&#123;</span><br><span class="line">    NSLog(@&quot;预览界面已经消失&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//文件内部链接点击不进行外部跳转</span><br><span class="line">- (BOOL)previewController:(QLPreviewController *)controller shouldOpenURL:(NSURL *)url forPreviewItem:(id &lt;QLPreviewItem&gt;)item</span><br><span class="line">&#123;</span><br><span class="line">    return NO;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>Xcode 常见错误(持续更新)</title>
    <url>/2019/12/26/Xcode%20%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0)/</url>
    <content><![CDATA[<a id="more"></a>
<ul>
<li>问题:Xcode的 Command +/ 快捷键注释代码，不可使用</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">解决：在终端输入sudo /usr/libexec/xpccachectl  然后重启电脑</span><br></pre></td></tr></table></figure>

<ul>
<li>问题:Xcode9 xib报错 Safe Area Layout Guide before iOS 9.0<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、打开右侧的 Show the File inspetcor</span><br><span class="line"></span><br><span class="line">2、去掉 Use Safe Area Layout Guides</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-0ed6b579b9a5fc6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="去掉"></p>
]]></content>
      <categories>
        <category>Xcode</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>Xcode 添加了libxml2.dylb的framework ，结果还是引用不了，  老是提示找不到头文件</title>
    <url>/2019/12/26/Xcode%20%E6%B7%BB%E5%8A%A0%E4%BA%86libxml2.dylb%E7%9A%84framework%20%EF%BC%8C%E7%BB%93%E6%9E%9C%E8%BF%98%E6%98%AF%E5%BC%95%E7%94%A8%E4%B8%8D%E4%BA%86%EF%BC%8C%20%20%E8%80%81%E6%98%AF%E6%8F%90%E7%A4%BA%E6%89%BE%E4%B8%8D%E5%88%B0%E5%A4%B4%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<a id="more"></a>
<p>添加了libxml2.dylb的framework ，结果还是引用不了，  老是提示找不到头文件。</p>
<p>这个问题其实比较容易解决，但是Xcode的版本问题确实让开发者头疼。</p>
<p>在Xcode4,2之后，可以在添加了libxml2.dylb之后，点击左上角的project，然后进行Build Settings（这里不管是Project还是targets都行），找到Search Paths选项卡，其下有Header Search Paths条目，双击debug选项，添加/usr/include/libxml2就行了。</p>
]]></content>
      <categories>
        <category>Xcode</category>
      </categories>
  </entry>
  <entry>
    <title>iOS 8 以后滑动cell删除等菜单</title>
    <url>/2019/12/26/iOS%208%20%E4%BB%A5%E5%90%8E%E6%BB%91%E5%8A%A8cell%E5%88%A0%E9%99%A4%E7%AD%89%E8%8F%9C%E5%8D%95/</url>
    <content><![CDATA[<p>iOS 8 以后滑动cell删除等菜单</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (NSArray&lt;UITableViewRowAction *&gt; *)tableView:(UITableView *)tableView editActionsForRowAtIndexPath:(NSIndexPath *)indexPath</span><br><span class="line">&#123;</span><br><span class="line">    UITableViewRowAction *row1 = [UITableViewRowAction rowActionWithStyle:UITableViewRowActionStyleDefault title:NSLocalizedString(@&quot;编辑&quot;, nil) handler:^(UITableViewRowAction * _Nonnull action, NSIndexPath * _Nonnull indexPath) &#123;</span><br><span class="line">        NSLog(@&quot;%ld的编辑&quot;,(long)indexPath.row);</span><br><span class="line">    &#125;];</span><br><span class="line">    row1.backgroundColor = [UIColor orangeColor];</span><br><span class="line">    </span><br><span class="line">    UITableViewRowAction *row2 = [UITableViewRowAction rowActionWithStyle:UITableViewRowActionStyleDefault title:NSLocalizedString(@&quot;删除了&quot;, nil) handler:^(UITableViewRowAction * _Nonnull action, NSIndexPath * _Nonnull indexPath) &#123;</span><br><span class="line">        NSLog(@&quot;%ld的删除&quot;,(long)indexPath.row);</span><br><span class="line">    &#125;];</span><br><span class="line">    row2.backgroundColor = [UIColor blueColor];</span><br><span class="line">    </span><br><span class="line">    return @[row1,row2];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS APP各种状态（进入后台，前台等整理）</title>
    <url>/2019/12/26/iOS%20APP%E5%90%84%E7%A7%8D%E7%8A%B6%E6%80%81%EF%BC%88%E8%BF%9B%E5%85%A5%E5%90%8E%E5%8F%B0%EF%BC%8C%E5%89%8D%E5%8F%B0%E7%AD%89%E6%95%B4%E7%90%86%EF%BC%89/</url>
    <content><![CDATA[<p>APP各种状态（进入后台，前台等整理）</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#pragma mark - 程序将要进入后台</span><br><span class="line">- (void)applicationWillResignActive:(UIApplication *)application &#123;</span><br><span class="line">    // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.</span><br><span class="line">    // Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.</span><br><span class="line">    DLog(@&quot;程序将要进入后台&quot;);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 程序进入后台</span><br><span class="line">- (void)applicationDidEnterBackground:(UIApplication *)application &#123;</span><br><span class="line">    // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.</span><br><span class="line">    // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.</span><br><span class="line">    DLog(@&quot;程序进入后台&quot;);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 程序将要进入前台</span><br><span class="line">- (void)applicationWillEnterForeground:(UIApplication *)application &#123;</span><br><span class="line">    // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.</span><br><span class="line">    DLog(@&quot;程序将要进入前台&quot;);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 程序进入前台</span><br><span class="line">- (void)applicationDidBecomeActive:(UIApplication *)application &#123;</span><br><span class="line">    // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.</span><br><span class="line">    DLog(@&quot;程序进入前台&quot;);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>tableview</tag>
      </tags>
  </entry>
  <entry>
    <title>Xcode 代码格式化 .clang-format配置</title>
    <url>/2019/12/26/XCode%20%E4%BB%A3%E7%A0%81%E6%A0%BC%E5%BC%8F%E5%8C%96%20.clang-format%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>.clang-format配置</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 工具 https://github.com/mapbox/XcodeClangFormat</span><br><span class="line"># 函数名详细地址 英文 http://clang.llvm.org/docs/ClangFormatStyleOptions.html</span><br><span class="line"># 函数名详细地址 中文 https://www.cnblogs.com/PaulpauL/p/5929753.html</span><br><span class="line"></span><br><span class="line"># 基于样式</span><br><span class="line">BasedOnStyle: LLVM</span><br><span class="line"></span><br><span class="line"># 对齐注释</span><br><span class="line">AlignTrailingComments: true</span><br><span class="line"></span><br><span class="line"># 指针和引用的对齐方式</span><br><span class="line">PointerAlignment: Right</span><br><span class="line"></span><br><span class="line"># 用于缩进的列数</span><br><span class="line">IndentWidth: 4</span><br><span class="line"></span><br><span class="line"># switch的case缩进</span><br><span class="line">IndentCaseLabels: true</span><br><span class="line"></span><br><span class="line"># OC里面，在@property后加空格</span><br><span class="line">ObjCSpaceAfterProperty: true</span><br><span class="line"></span><br><span class="line"># OC里面，在Protocol前后加空格</span><br><span class="line">ObjCSpaceBeforeProtocolList: true</span><br><span class="line"></span><br><span class="line"># 单行注释前的空格数</span><br><span class="line">SpacesBeforeTrailingComments: 1</span><br><span class="line"></span><br><span class="line"># 连续的空行保留几行</span><br><span class="line">MaxEmptyLinesToKeep: 1</span><br><span class="line"></span><br><span class="line"># 保留block里面的空行</span><br><span class="line">KeepEmptyLinesAtTheStartOfBlocks: false</span><br><span class="line"></span><br><span class="line"># 每行字符的限制，0表示没有限制</span><br><span class="line">ColumnLimit: 0</span><br><span class="line"></span><br><span class="line"># []中添加空格</span><br><span class="line">SpacesInSquareBrackets: false</span><br><span class="line"></span><br><span class="line"># ()中添加空格</span><br><span class="line">SpacesInParentheses : false</span><br><span class="line"></span><br><span class="line"># 容器类前添加空格</span><br><span class="line">SpacesInContainerLiterals: true</span><br><span class="line"></span><br><span class="line"># 赋值运算符前加空格</span><br><span class="line">SpaceBeforeAssignmentOperators: true</span><br><span class="line"></span><br><span class="line"># 在空括号中加空格</span><br><span class="line">SpaceInEmptyParentheses: false</span><br><span class="line"></span><br><span class="line"># 在&lt;&gt;中间插入空格</span><br><span class="line">SpacesInAngles: false</span><br><span class="line"></span><br><span class="line"># 换行的时候对齐操作符</span><br><span class="line">AlignOperands: true</span><br><span class="line"></span><br><span class="line"># 括号中的(),&#123;&#125;,[]代码对齐方式</span><br><span class="line">#AlignAfterOpenBracket: Align</span><br><span class="line"></span><br><span class="line">#ContinuationIndentWidth: 0</span><br><span class="line"></span><br><span class="line"># 赋值=对齐</span><br><span class="line">AlignConsecutiveAssignments: false</span><br><span class="line"></span><br><span class="line"># 声明参数对齐</span><br><span class="line">AlignConsecutiveDeclarations: false</span><br><span class="line"></span><br><span class="line"># 运算符位置</span><br><span class="line">BreakBeforeBinaryOperators: None</span><br><span class="line"></span><br><span class="line"># 允许短的函数放在同一行</span><br><span class="line">#AllowShortFunctionsOnASingleLine: None</span><br><span class="line"></span><br><span class="line"># 允许case在同一行</span><br><span class="line">AllowShortCaseLabelsOnASingleLine: false</span><br><span class="line"></span><br><span class="line"># 允许if在同一行</span><br><span class="line">AllowShortIfStatementsOnASingleLine: false</span><br><span class="line"></span><br><span class="line"># 允许while在同一行</span><br><span class="line">AllowShortLoopsOnASingleLine: false</span><br><span class="line"></span><br><span class="line"># 允许将简单的语句块放到同一行</span><br><span class="line">AllowShortBlocksOnASingleLine: false</span><br><span class="line"></span><br><span class="line">#缩进函数名</span><br><span class="line">IndentWrappedFunctionNames: false</span><br><span class="line"></span><br><span class="line"># 形参 如果为false要么都在同一行，要么各有一行</span><br><span class="line">BinPackParameters: false</span><br><span class="line"></span><br><span class="line"># 实参 如果为false要么都在同一行，要么各有一行</span><br><span class="line">BinPackArguments: false</span><br><span class="line"></span><br><span class="line"># 大括号换行</span><br><span class="line">BreakBeforeBraces: Custom</span><br><span class="line">BraceWrapping:</span><br><span class="line">  # class定义后面</span><br><span class="line">  AfterClass: true</span><br><span class="line">  # 控制语句后面</span><br><span class="line">  AfterControlStatement: false</span><br><span class="line">  # enum定义后面</span><br><span class="line">  AfterEnum: false</span><br><span class="line">  # 函数定义后面</span><br><span class="line">  AfterFunction: false</span><br><span class="line">  # 命名空间定义后面</span><br><span class="line">  AfterNamespace: false</span><br><span class="line">  # struct定义后面</span><br><span class="line">  AfterStruct: false</span><br><span class="line">  # union定义后面</span><br><span class="line">  AfterUnion: false</span><br><span class="line">  # catch之前</span><br><span class="line">  BeforeCatch: false</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Xcode</category>
      </categories>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Xcode -[XMPPSRVResolver processRecord:length:]</title>
    <url>/2019/12/26/Xcode%20-%5BXMPPSRVResolver%20processRecord:length:%5D/</url>
    <content><![CDATA[<a id="more"></a>
<p>“_dns_free_resource_record”, referenced from: -[XMPPSRVResolver processRecord:length:] in libEaseMobClientSDKLite.a(XMPPSRVResolver.o)</p>
<p>这样的错误，是由于缺少库：</p>
<p>添加libresolv.dylib库，就可以了<br><img src="https://upload-images.jianshu.io/upload_images/1897259-8f7cb547a8e05cce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果"></p>
]]></content>
      <categories>
        <category>Xcode</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>Xcode does not contain bitcode. You must rebuild it with bitcode enabled (Xcode setting ENABLE_BITCODE), obtain an updated library from the vendor, or disable bitcode for this target. for architecture armv7</title>
    <url>/2019/12/26/Xcode%20does%20not%20contain%20bitcode.%20You%20must%20rebuild%20it%20with%20bitcode%20enabled%20(Xcode%20setting%20ENABLE_BITCODE),%20obtain%20an%20updated%20library%20from%20the%20vendor,%20or%20disable%20bitcode%20for%20this%20target.%20for%20architecture%20armv7/</url>
    <content><![CDATA[<a id="more"></a>
<p><img src="http://upload-images.jianshu.io/upload_images/1897259-79cb3ed17e221e03.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="22163400_QFk2.jpg"></p>
]]></content>
      <categories>
        <category>Xcode</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>TableViewCell 下划线或分割线长度与颜色问题</title>
    <url>/2019/12/26/TableViewCell%20%E4%B8%8B%E5%88%92%E7%BA%BF%E6%88%96%E5%88%86%E5%89%B2%E7%BA%BF%E9%95%BF%E5%BA%A6%E4%B8%8E%E9%A2%9C%E8%89%B2%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>TableViewCell 下划线或分割线长度与颜色问题</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line"></span><br><span class="line">[super viewDidLoad];</span><br><span class="line"></span><br><span class="line">//UIEdgeInsetsZero 下划线为屏幕的宽</span><br><span class="line">//UIEdgeInsetsMake(&lt;#CGFloat top#&gt;, &lt;#CGFloat left#&gt;, &lt;#CGFloat bottom#&gt;, &lt;#CGFloat right#&gt;) 细微调整</span><br><span class="line"></span><br><span class="line">//下划线位置</span><br><span class="line">[self.tableView setSeparatorInset:UIEdgeInsetsZero];</span><br><span class="line"></span><br><span class="line">//下划线颜色</span><br><span class="line"></span><br><span class="line">[self.tableView setSeparatorColor:[UIColor xxxx ]];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">UITableViewCell *cell;</span><br><span class="line"></span><br><span class="line">[cell setSeparatorInset:UIEdgeInsetsZero];</span><br><span class="line"></span><br><span class="line">[cell setLayoutMargins:UIEdgeInsetsZero];</span><br><span class="line"></span><br><span class="line">return cell;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode 配置</title>
    <url>/2019/12/26/VSCode%20%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>VSCode 配置</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;emmet.includeLanguages&quot;: &#123;</span><br><span class="line">    &quot;javascript&quot;: &quot;javascriptreact&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  //格式化工具</span><br><span class="line">  &quot;[jsonc]&quot;: &#123;</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;vscode.json-language-features&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;[javascript]&quot;: &#123;</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 设置样式</span><br><span class="line">  &quot;workbench.settings.editor&quot;: &quot;json&quot;,</span><br><span class="line">  // 控制资源管理器是否在把文件删除到废纸篓时进行确认</span><br><span class="line">  &quot;explorer.confirmDelete&quot;: false,</span><br><span class="line">  // 控制在资源管理器内拖放移动文件或文件夹时是否进行确认</span><br><span class="line">  &quot;explorer.confirmDragAndDrop&quot;: false,</span><br><span class="line">  // 自动更新路径</span><br><span class="line">  &quot;javascript.updateImportsOnFileMove.enabled&quot;: &quot;always&quot;,</span><br><span class="line">  // 主题</span><br><span class="line">  &quot;workbench.colorTheme&quot;: &quot;Visual Studio Dark&quot;,</span><br><span class="line">  //字体</span><br><span class="line">  &quot;editor.fontFamily&quot;: &quot;&apos;Cascadia Code&apos;,&apos;Microsoft Yahei&apos;,Menlo, Monaco, &apos;Courier New&apos;, monospace&quot;,</span><br><span class="line">  // 自动换行</span><br><span class="line">  &quot;editor.wordWrap&quot;: &quot;on&quot;,</span><br><span class="line">  &quot;editor.wordWrapColumn&quot;: 100,</span><br><span class="line">  // tab间隔</span><br><span class="line">  &quot;editor.tabSize&quot;: 2,</span><br><span class="line">  // 每次保存的时候自动格式化</span><br><span class="line">  &quot;editor.formatOnSave&quot;: true,</span><br><span class="line">  // 代码补全</span><br><span class="line">  &quot;editor.quickSuggestions&quot;: &#123;</span><br><span class="line">    &quot;other&quot;: true,</span><br><span class="line">    &quot;comments&quot;: true,</span><br><span class="line">    &quot;strings&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;code-runner.runInTerminal&quot;: true,</span><br><span class="line">  // 每次保存的时候将代码按eslint格式进行修复</span><br><span class="line">  &quot;eslint.autoFixOnSave&quot;: true,</span><br><span class="line">  //---&gt; Prettier - Code formatter 代码格式化</span><br><span class="line">  // 使用单引号</span><br><span class="line">  &quot;prettier.singleQuote&quot;: true,</span><br><span class="line">  // 结尾不加分号</span><br><span class="line">  &quot;prettier.semi&quot;: false,</span><br><span class="line">  // 尾随逗号</span><br><span class="line">  &quot;prettier.trailingComma&quot;: &quot;all&quot;,</span><br><span class="line">  //---&lt;</span><br><span class="line">  //---&gt; koroFileHeader</span><br><span class="line">  &quot;fileheader.configObj&quot;: &#123;</span><br><span class="line">    &quot;autoAdd&quot;: false, // 自动添加头部注释开启才能自动添加</span><br><span class="line">    &quot;autoAlready&quot;: true, // 默认开启</span><br><span class="line">    &quot;language&quot;: &#123;</span><br><span class="line">      &quot;dart&quot;: &#123;</span><br><span class="line">        &quot;head&quot;: &quot;/// MARK:&quot;,</span><br><span class="line">        &quot;middle&quot;: &quot;//  @&quot;,</span><br><span class="line">        &quot;end&quot;: &quot;//  备注 &quot;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  // 头部注释</span><br><span class="line">  &quot;fileheader.customMade&quot;: &#123;</span><br><span class="line">    &quot;Description&quot;: &quot;类描述&quot;,</span><br><span class="line">    &quot;Author&quot;: &quot;陈胜辉&quot;,</span><br><span class="line">    &quot;Date&quot;: &quot;Do not edit&quot;, // 文件创建时间(不变)</span><br><span class="line">    &quot;Version&quot;: &quot;版本号, YYYY-MM-DD&quot;,</span><br><span class="line">    &quot;LastEditors&quot;: &quot;陈胜辉&quot;, // 文件最后编辑者</span><br><span class="line">    &quot;LastEditTime&quot;: &quot;Do not edit&quot;, // 文件最后编辑时间</span><br><span class="line">    &quot;Deprecated&quot;: &quot;否&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  //函数注释</span><br><span class="line">  &quot;fileheader.cursorMode&quot;: &#123;</span><br><span class="line">    &quot;LastEditors&quot;: &quot;陈胜辉&quot;, // 文件最后编辑者</span><br><span class="line">    &quot;Version&quot;: &quot;版本号, YYYY-MM-DD&quot;,</span><br><span class="line">    &quot;param&quot;: &quot;&quot;,</span><br><span class="line">    &quot;return&quot;: &quot;&quot;,</span><br><span class="line">    &quot;Deprecated&quot;: &quot;否&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  //---&lt;</span><br><span class="line">  //---&gt; Todo Tree</span><br><span class="line">  &quot;todo-tree.general.tags&quot;: [</span><br><span class="line">    &quot;TODO&quot;,</span><br><span class="line">    &quot;FIXBUG&quot;,</span><br><span class="line">    &quot;MARK&quot;,</span><br><span class="line">    &quot;FIXME&quot;,</span><br><span class="line">    &quot;XXX&quot;,</span><br><span class="line">  ],</span><br><span class="line">  &quot;todo-tree.highlights.customHighlight&quot;: &#123;</span><br><span class="line">    &quot;TODO&quot;: &#123;</span><br><span class="line">      &quot;icon&quot;: &quot;pin&quot;,</span><br><span class="line">      &quot;foreground&quot;: &quot;#00BFFF&quot;,</span><br><span class="line">      &quot;iconColour&quot;: &quot;#00BFFF&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;FIXME&quot;: &#123;</span><br><span class="line">      &quot;icon&quot;: &quot;issue-reopened&quot;,</span><br><span class="line">      &quot;foreground&quot;: &quot;red&quot;,</span><br><span class="line">      &quot;iconColour&quot;: &quot;red&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;MARK&quot;: &#123;</span><br><span class="line">      &quot;icon&quot;: &quot;tag&quot;,</span><br><span class="line">      &quot;foreground&quot;: &quot;#CD8500&quot;,</span><br><span class="line">      &quot;iconColour&quot;: &quot;#CD8500&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;FIXBUG&quot;: &#123;</span><br><span class="line">      &quot;icon&quot;: &quot;tools&quot;,</span><br><span class="line">      &quot;foreground&quot;: &quot;#D02090&quot;,</span><br><span class="line">      &quot;iconColour&quot;: &quot;#D02090&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;XXX&quot;: &#123;</span><br><span class="line">      &quot;icon&quot;: &quot;unverified&quot;,</span><br><span class="line">      &quot;foreground&quot;: &quot;green&quot;,</span><br><span class="line">      &quot;iconColour&quot;: &quot;green&quot;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;workbench.iconTheme&quot;: &quot;vscode-icons-mac&quot;,</span><br><span class="line">  &quot;dart.debugExternalLibraries&quot;: false,</span><br><span class="line">  &quot;dart.debugSdkLibraries&quot;: false,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>插件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//Auto Rename Tag</span><br><span class="line">//ESLint</span><br><span class="line">//彩色括号</span><br><span class="line">Bracket Pair Colorizer</span><br><span class="line">//中文</span><br><span class="line">Chinese (Simplified) Language Pack for Visual Studio Code</span><br><span class="line">//翻译</span><br><span class="line">Comment Translate</span><br><span class="line">//相对路径</span><br><span class="line">Path Intellisense</span><br><span class="line">//格式化</span><br><span class="line">Prettier - Code formatter</span><br><span class="line">//注释查看</span><br><span class="line">Todo Tree</span><br><span class="line">//文件 方法注释</span><br><span class="line">koroFileHeader</span><br><span class="line">//富文本编辑</span><br><span class="line">Markdown Preview Enhanced</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/1897259-c64b07d64dc1cbf1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
]]></content>
      <categories>
        <category>VSCode</category>
      </categories>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 安装ruby</title>
    <url>/2019/12/26/Mac%20%E5%AE%89%E8%A3%85ruby/</url>
    <content><![CDATA[<p>安装 ruby</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.rvm.io | bash -s stable</span><br><span class="line"></span><br><span class="line">source ~/.rvm/scripts/rvm</span><br><span class="line"></span><br><span class="line">rvm -v</span><br><span class="line"></span><br><span class="line">rvm install 2.6</span><br><span class="line"></span><br><span class="line">rvm use ruby-2.6.3 --default</span><br><span class="line"></span><br><span class="line">ruby -e &quot;\$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>操作</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 自定义组件之导航栏</title>
    <url>/2019/12/26/Flutter%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E4%B9%8B%E5%AF%BC%E8%88%AA%E6%A0%8F/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//  @Description: 自定义组件</span><br><span class="line">//  @Author: 陈胜辉</span><br><span class="line">//  @Date: 2019-12-05 08:37:35</span><br><span class="line">//  @Version: 版本号, YYYY-MM-DD</span><br><span class="line">//  @LastEditors: 陈胜辉</span><br><span class="line">//  @LastEditTime: 2019-12-05 08:38:46</span><br><span class="line">//  @Deprecated: 否</span><br><span class="line">//  备注</span><br><span class="line"></span><br><span class="line">import &apos;dart:math&apos;;</span><br><span class="line"></span><br><span class="line">import &apos;package:flutter/cupertino.dart&apos;;</span><br><span class="line">import &apos;package:flutter/material.dart&apos;;</span><br><span class="line">import &apos;package:flutter_app/tool/data_helper.dart&apos;;</span><br><span class="line">import &apos;package:flutter_app/util/routerUtil.dart&apos;;</span><br><span class="line"></span><br><span class="line">/// MARK:自定义导航栏</span><br><span class="line">//  @LastEditors: 陈胜辉</span><br><span class="line">//  @Version: 版本号, YYYY-MM-DD</span><br><span class="line">//  @param &#123;type&#125;</span><br><span class="line">//  @return:</span><br><span class="line">//  @Deprecated: 否</span><br><span class="line">//  备注</span><br><span class="line">class CustomNav extends StatelessWidget &#123;</span><br><span class="line">  CustomNav(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    this.height,</span><br><span class="line">    this.defaultLeft = true,</span><br><span class="line">    this.opacity = 1.0,</span><br><span class="line">    this.sapce = 5.0,</span><br><span class="line">    this.middleText = &apos;&apos;,</span><br><span class="line">    this.middle,</span><br><span class="line">    this.backgroundColor,</span><br><span class="line">    this.background,</span><br><span class="line">    this.actionsMaxW,</span><br><span class="line">    this.leftActions,</span><br><span class="line">    this.rightActions,</span><br><span class="line">  &#125;)  : assert(height == null || height &gt;= CommonData.navH,</span><br><span class="line">            &apos;导航栏高度最小为$&#123;CommonData.navH&#125;&apos;),</span><br><span class="line">        super(key: key);</span><br><span class="line"></span><br><span class="line">  //高度</span><br><span class="line">  final double height;</span><br><span class="line">  //默认左侧按钮</span><br><span class="line">  final bool defaultLeft;</span><br><span class="line">  //屏幕两边空隙</span><br><span class="line">  final double sapce;</span><br><span class="line">  //透明度</span><br><span class="line">  final double opacity;</span><br><span class="line">  //标题文字</span><br><span class="line">  final String middleText;</span><br><span class="line">  //中间视图</span><br><span class="line">  final Widget middle;</span><br><span class="line">  //背景颜色</span><br><span class="line">  final Color backgroundColor;</span><br><span class="line">  //背景视图</span><br><span class="line">  final Widget background;</span><br><span class="line">  //默认 _actionW * count 如果超过需要设置</span><br><span class="line">  final double actionsMaxW;</span><br><span class="line">  //按钮集合</span><br><span class="line">  final List&lt;Widget&gt; leftActions;</span><br><span class="line">  final List&lt;Widget&gt; rightActions;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    //配置视图</span><br><span class="line">    return _handleWidget(context);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// MARK:处理组件</span><br><span class="line">  //  @LastEditors: 陈胜辉</span><br><span class="line">  //  @Version: 版本号, YYYY-MM-DD</span><br><span class="line">  //  @param &#123;type&#125;</span><br><span class="line">  //  @return:</span><br><span class="line">  //  @Deprecated: 否</span><br><span class="line">  //  备注</span><br><span class="line">  Widget _handleWidget(BuildContext context) &#123;</span><br><span class="line">    double _actionW = 48.0;</span><br><span class="line">    //数据处理</span><br><span class="line">    //背景颜色</span><br><span class="line">    Color _backgroundColor = (this.backgroundColor != null)</span><br><span class="line">        ? this.backgroundColor</span><br><span class="line">        : Color.fromRGBO(97, 148, 244, 1);</span><br><span class="line">    //透明度（0 ～ 1）</span><br><span class="line">    double _opacity = max(min(this.opacity, 1), 0);</span><br><span class="line">    //高度</span><br><span class="line">    double _height = (height == null) ? CommonData.navAndStatusH : height;</span><br><span class="line">    _height = max(CommonData.navH, _height);</span><br><span class="line">    //事件宽度</span><br><span class="line">    double _actionsMaxW = this.actionsMaxW;</span><br><span class="line">    //左侧组件集合</span><br><span class="line">    List&lt;Widget&gt; _leftActions = this.leftActions;</span><br><span class="line">    //默认左侧返回按钮</span><br><span class="line">    if (null == _leftActions &amp;&amp; defaultLeft) &#123;</span><br><span class="line">      _leftActions = [_getNavBack(context)];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //取出有多少个按钮</span><br><span class="line">    int count = max((_leftActions != null) ? _leftActions.length : 0,</span><br><span class="line">        (this.rightActions != null) ? this.rightActions.length : 0);</span><br><span class="line"></span><br><span class="line">    if (null == _actionsMaxW) &#123;</span><br><span class="line">      //默认</span><br><span class="line">      _actionsMaxW = count * _actionW;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //中间组件</span><br><span class="line">    Widget _middle = this.middle;</span><br><span class="line">    if (null == _middle) &#123;</span><br><span class="line">      _middle = Container(</span><br><span class="line">        alignment: Alignment.center,</span><br><span class="line">        child: Text(</span><br><span class="line">          middleText,</span><br><span class="line">          style: TextStyle(</span><br><span class="line">            color: Colors.white,</span><br><span class="line">            fontSize: 18,</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 返回组件</span><br><span class="line">    return Opacity(</span><br><span class="line">      opacity: _opacity,</span><br><span class="line">      child: Stack(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          //底部视图</span><br><span class="line">          Container(</span><br><span class="line">            width: CommonData.screenW,</span><br><span class="line">            height: _height,</span><br><span class="line">            color: backgroundColor,</span><br><span class="line">            child: Stack(</span><br><span class="line">              children: &lt;Widget&gt;[</span><br><span class="line">                //底部背景</span><br><span class="line">                Container(</span><br><span class="line">                  width: CommonData.screenW,</span><br><span class="line">                  height: _height,</span><br><span class="line">                  color: _backgroundColor,</span><br><span class="line">                  child: background,</span><br><span class="line">                ),</span><br><span class="line">                //上方内容</span><br><span class="line">                Container(</span><br><span class="line">                  margin: EdgeInsets.only(top: _height - CommonData.navH),</span><br><span class="line">                  height: CommonData.navH,</span><br><span class="line">                  child: Row(</span><br><span class="line">                    mainAxisAlignment: MainAxisAlignment.spaceBetween,</span><br><span class="line">                    children: &lt;Widget&gt;[</span><br><span class="line">                      //左边</span><br><span class="line">                      Container(</span><br><span class="line">                        width: _actionsMaxW,</span><br><span class="line">                        margin: EdgeInsets.only(left: sapce),</span><br><span class="line">                        child: (null == _leftActions)</span><br><span class="line">                            ? null</span><br><span class="line">                            : Row(</span><br><span class="line">                                children: _leftActions,</span><br><span class="line">                              ),</span><br><span class="line">                      ),</span><br><span class="line"></span><br><span class="line">                      //中间视图</span><br><span class="line">                      Expanded(</span><br><span class="line">                        child: _middle,</span><br><span class="line">                      ),</span><br><span class="line"></span><br><span class="line">                      //右边</span><br><span class="line">                      Container(</span><br><span class="line">                        width: _actionsMaxW,</span><br><span class="line">                        margin: EdgeInsets.only(right: sapce),</span><br><span class="line">                        child: (null == rightActions)</span><br><span class="line">                            ? null</span><br><span class="line">                            : Row(</span><br><span class="line">                                children: rightActions,</span><br><span class="line">                              ),</span><br><span class="line">                      ),</span><br><span class="line">                    ],</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              ],</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// MARK:导航栏按钮</span><br><span class="line">  //  @LastEditors: 陈胜辉</span><br><span class="line">  //  @Version: 版本号, YYYY-MM-DD</span><br><span class="line">  //  @param &#123;type&#125;</span><br><span class="line">  //  @return:</span><br><span class="line">  //  @Deprecated: 否</span><br><span class="line">  //  备注</span><br><span class="line">  Widget _getNavBack(BuildContext context) &#123;</span><br><span class="line">    return BackButton(</span><br><span class="line">      color: Colors.white,</span><br><span class="line">      onPressed: () &#123;</span><br><span class="line">        RouterUtil.pop(context);</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">    // CupertinoButton(</span><br><span class="line">    //   padding: EdgeInsets.only(left: 0),</span><br><span class="line">    //   pressedOpacity: 0.8,</span><br><span class="line">    //   child: Icon(</span><br><span class="line">    //     Icons.arrow_back_ios,</span><br><span class="line">    //     size: 20,</span><br><span class="line">    //     color: Colors.white,</span><br><span class="line">    //   ),</span><br><span class="line">    //   onPressed: () &#123;</span><br><span class="line">    //     RouterUtil.pop(context);</span><br><span class="line">    //   &#125;,</span><br><span class="line">    // );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>操作</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 安装Flutter环境</title>
    <url>/2019/12/26/Mac%20%E5%AE%89%E8%A3%85Flutter%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>Mac 安装Flutter环境</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">安装flutter</span><br><span class="line"></span><br><span class="line">//打开环境变量配置</span><br><span class="line">open ~/.bash_profile</span><br><span class="line"></span><br><span class="line">//加入下面环境变量</span><br><span class="line">export PUB_HOSTED_URL=https://pub.flutter-io.cn</span><br><span class="line">export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</span><br><span class="line"></span><br><span class="line">//生效</span><br><span class="line">source ~/.bash_profile</span><br><span class="line"></span><br><span class="line">//下载安装flutter</span><br><span class="line">git clone -b master https://github.com/flutter/flutter.git</span><br><span class="line"></span><br><span class="line">./flutter/bin/flutter --version</span><br><span class="line"></span><br><span class="line">//打开环境变量配置</span><br><span class="line">open ~/.bash_profile</span><br><span class="line"></span><br><span class="line">//加一行 xxx 安装目录</span><br><span class="line">export PATH=/xxx/flutter/bin:$PATH</span><br><span class="line"></span><br><span class="line">//生效</span><br><span class="line">source ~/.bash_profile</span><br><span class="line"></span><br><span class="line">brew install --HEAD libimobiledevice</span><br><span class="line">brew install ideviceinstaller ios-deploy cocoapods</span><br><span class="line"></span><br><span class="line">//配置</span><br><span class="line">flutter doctor -v</span><br><span class="line"></span><br><span class="line">其他</span><br><span class="line">//创建flutter</span><br><span class="line">flutter create flutter_module	</span><br><span class="line">	</span><br><span class="line">//升级</span><br><span class="line">flutter upgrade</span><br><span class="line"></span><br><span class="line">//查看环境</span><br><span class="line">flutter channel</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>操作</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 安装pod</title>
    <url>/2019/12/26/Mac%20%E5%AE%89%E8%A3%85pod/</url>
    <content><![CDATA[<p>Mac 安装 pod</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">需要安装Xcode</span><br><span class="line">gem -v</span><br><span class="line"></span><br><span class="line">gem source -r https://rubygems.org/</span><br><span class="line"></span><br><span class="line">gem source -a https://gems.ruby-china.com/</span><br><span class="line"></span><br><span class="line">gem source -l</span><br><span class="line"></span><br><span class="line">sudo gem install -n /usr/local/bin cocoapods --pre</span><br><span class="line"></span><br><span class="line">pod setup</span><br><span class="line"></span><br><span class="line">pod --version</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//快速安装与更新</span><br><span class="line">--verbose --no-repo-update</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>操作</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 自定义组件之列表头悬浮</title>
    <url>/2019/12/26/Flutter%20%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E4%B9%8B%E5%88%97%E8%A1%A8%E5%A4%B4%E6%82%AC%E6%B5%AE/</url>
    <content><![CDATA[<p>核心</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import &apos;package:flutter/material.dart&apos;;</span><br><span class="line"></span><br><span class="line">class SHSectionHeadConfig &#123;</span><br><span class="line">  //悬浮组件key集合</span><br><span class="line">  List&lt;GlobalKey&gt; keyList = [];</span><br><span class="line">  //列表滚动方向</span><br><span class="line">  Axis scrollDirection = Axis.vertical;</span><br><span class="line">  //当前悬浮</span><br><span class="line">  int currentIndex = -1;</span><br><span class="line">  //偏移位置</span><br><span class="line">  double offset = 0;</span><br><span class="line">  //悬浮位置(相对于设备)</span><br><span class="line">  double position = 0;</span><br><span class="line"></span><br><span class="line">  //悬浮组件的大小</span><br><span class="line">  Size _size;</span><br><span class="line"></span><br><span class="line">  /// MARK:处理数据</span><br><span class="line">  //  @LastEditors: 陈胜辉</span><br><span class="line">  //  @Version: 版本号, YYYY-MM-DD</span><br><span class="line">  //  @param &#123;type&#125;</span><br><span class="line">  //  @return: 是否需要刷新</span><br><span class="line">  //  @Deprecated: 否</span><br><span class="line">  //  备注</span><br><span class="line">  bool handleData() &#123;</span><br><span class="line">    int _currentIndex = -1;</span><br><span class="line">    Offset _off = Offset(0.0, -position);</span><br><span class="line">    if (scrollDirection == Axis.horizontal) &#123;</span><br><span class="line">      _off = Offset(position, 0.0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for (var i = keyList.length - 1; i &gt;= 0; i--) &#123;</span><br><span class="line">      GlobalKey key = keyList[i];</span><br><span class="line">      if (key.currentContext != null) &#123;</span><br><span class="line">        RenderBox render = key.currentContext.findRenderObject();</span><br><span class="line">        Offset renderOffset = render.localToGlobal(_off);</span><br><span class="line">        //取出滚动方向对应的数据</span><br><span class="line">        double location = renderOffset.dy;</span><br><span class="line">        if (scrollDirection == Axis.horizontal) &#123;</span><br><span class="line">          location = renderOffset.dx;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (location &lt;= 0) &#123;</span><br><span class="line">          //找到最后一个悬浮的</span><br><span class="line">          _currentIndex = i;</span><br><span class="line">          _size = render.size;</span><br><span class="line">          break;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //加一层复用保护</span><br><span class="line">    if (_currentIndex &lt; 0 &amp;&amp; currentIndex &gt;= 0) &#123;</span><br><span class="line">      GlobalKey key = keyList[currentIndex];</span><br><span class="line">      if (key.currentContext == null) &#123;</span><br><span class="line">        _currentIndex = currentIndex;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        _currentIndex = currentIndex - 1;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    double _offset = 0;</span><br><span class="line">    //存在悬浮的</span><br><span class="line">    if (_currentIndex &gt;= 0) &#123;</span><br><span class="line">      //取出下一个位置</span><br><span class="line">      if ((_currentIndex + 1) &lt; keyList.length) &#123;</span><br><span class="line">        GlobalKey key = keyList[_currentIndex + 1];</span><br><span class="line">        if (key.currentContext != null) &#123;</span><br><span class="line">          RenderBox render = key.currentContext.findRenderObject();</span><br><span class="line">          Offset renderOffset = render.localToGlobal(_off);</span><br><span class="line">          //取出滚动方向对应的数据</span><br><span class="line">          double offsetAxis = renderOffset.dy;</span><br><span class="line">          double sizeAxis = _size.height;</span><br><span class="line"></span><br><span class="line">          if (scrollDirection == Axis.horizontal) &#123;</span><br><span class="line">            offsetAxis = renderOffset.dx;</span><br><span class="line">            sizeAxis = _size.width;</span><br><span class="line">          &#125;</span><br><span class="line">          //计算偏移位置</span><br><span class="line">          if (offsetAxis &lt; sizeAxis) &#123;</span><br><span class="line">            _offset = offsetAxis - sizeAxis;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (_currentIndex != currentIndex || _offset != offset) &#123;</span><br><span class="line">      currentIndex = _currentIndex;</span><br><span class="line">      offset = _offset;</span><br><span class="line">      return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return false;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import &apos;package:flutter/material.dart&apos;;</span><br><span class="line">import &apos;package:flutter_app/tool/data_helper.dart&apos;;</span><br><span class="line">import &apos;package:flutter_app/tool/color_helper.dart&apos;;</span><br><span class="line">import &apos;package:flutter_app/tool/scction_head_helper.dart&apos;;</span><br><span class="line"></span><br><span class="line">class CSHColumnList extends StatefulWidget &#123;</span><br><span class="line">  @override</span><br><span class="line">  _CSHListState createState() =&gt; _CSHListState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class _CSHListState extends State&lt;CSHColumnList&gt; &#123;</span><br><span class="line">  ScrollController _listScrollC = ScrollController();</span><br><span class="line">  SHSectionHeadConfig config = SHSectionHeadConfig();</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  void initState() &#123;</span><br><span class="line">    super.initState();</span><br><span class="line"></span><br><span class="line">    //初始化model</span><br><span class="line">    for (var i = 0; i &lt; 4; i++) &#123;</span><br><span class="line">      config.keyList.add(GlobalKey());</span><br><span class="line">    &#125;</span><br><span class="line">    config.position = 100.0;</span><br><span class="line"></span><br><span class="line">    _listScrollC.addListener(() &#123;</span><br><span class="line">      if (config.handleData()) &#123;</span><br><span class="line">        setState(() &#123;&#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    // This method is rerun every time setState is called, for instance as done</span><br><span class="line">    // by the _incrementCounter method above.</span><br><span class="line">    //</span><br><span class="line">    // The Flutter framework has been optimized to make rerunning build methods</span><br><span class="line">    // fast, so that you can just rebuild anything that needs updating rather</span><br><span class="line">    // than having to individually change instances of widgets.</span><br><span class="line">    return Scaffold(</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          // Here we take the value from the MyHomePage object that was created by</span><br><span class="line">          // the App.build method, and use it to set our appbar title.</span><br><span class="line">          title: Text(&apos;列悬浮&apos;),</span><br><span class="line">        ),</span><br><span class="line">        body: Stack(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            ListView.builder(</span><br><span class="line">              controller: _listScrollC,</span><br><span class="line">              itemBuilder: (BuildContext context, int index) &#123;</span><br><span class="line">                if (index == 1) &#123;</span><br><span class="line">                  return getHeadView(0, true);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (index == 9) &#123;</span><br><span class="line">                  return getHeadView(1, true);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (index == 20) &#123;</span><br><span class="line">                  return getHeadView(2, true);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (index == 30) &#123;</span><br><span class="line">                  return getHeadView(3, true);</span><br><span class="line">                &#125;</span><br><span class="line">                return Container(</span><br><span class="line">                  color: Colors.red,</span><br><span class="line">                  alignment: Alignment.center,</span><br><span class="line">                  child: Text(</span><br><span class="line">                    &apos;我是第 --- $index&apos;,</span><br><span class="line">                    style: TextStyle(</span><br><span class="line">                      fontSize: 40,</span><br><span class="line">                    ),</span><br><span class="line">                  ),</span><br><span class="line">                );</span><br><span class="line">              &#125;,</span><br><span class="line">              itemCount: 50,</span><br><span class="line">            ),</span><br><span class="line">            handleHead(),</span><br><span class="line">          ],</span><br><span class="line">        ));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// MARK:处理悬浮头部</span><br><span class="line">  //  @LastEditors: 陈胜辉</span><br><span class="line">  //  @Version: 版本号, YYYY-MM-DD</span><br><span class="line">  //  @param &#123;type&#125;</span><br><span class="line">  //  @return:</span><br><span class="line">  //  @Deprecated: 否</span><br><span class="line">  //  备注</span><br><span class="line">  Widget handleHead() &#123;</span><br><span class="line">    Widget widget = Container();</span><br><span class="line">    //需要悬浮</span><br><span class="line">    if (config.currentIndex &gt;= 0) &#123;</span><br><span class="line">      widget = Positioned(</span><br><span class="line">        top: config.offset,</span><br><span class="line">        child: getHeadView(config.currentIndex, false),</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return widget;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  /// MARK:获取头部组件</span><br><span class="line">  //  @LastEditors: 陈胜辉</span><br><span class="line">  //  @Version: 版本号, YYYY-MM-DD</span><br><span class="line">  //  @param &#123;type&#125;</span><br><span class="line">  //  @return:</span><br><span class="line">  //  @Deprecated: 否</span><br><span class="line">  //  备注</span><br><span class="line">  Widget getHeadView(int index, bool isKey) &#123;</span><br><span class="line">    return Container(</span><br><span class="line">      key: isKey ? config.keyList[index] : null,</span><br><span class="line">      height: 90,</span><br><span class="line">      width: CommonData.screenW,</span><br><span class="line">      color: isKey ? randomColor() : Colors.cyan,</span><br><span class="line">      alignment: Alignment.center,</span><br><span class="line">      child: Text(</span><br><span class="line">        &apos;我是head === $index&apos;,</span><br><span class="line">        style: TextStyle(</span><br><span class="line">          fontSize: 20,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>操作</tag>
      </tags>
  </entry>
  <entry>
    <title>CornerStone上传静态库（.a文件）</title>
    <url>/2019/12/26/CornerStone%E4%B8%8A%E4%BC%A0%E9%9D%99%E6%80%81%E5%BA%93%EF%BC%88.a%E6%96%87%E4%BB%B6%EF%BC%89/</url>
    <content><![CDATA[<a id="more"></a>
<p>CornerStone上传静态库（.a文件）</p>
<p>首先打开软件左上角 CornerStone-Preferences-SubVersion<br><img src="http://upload-images.jianshu.io/upload_images/1897259-7babc780bc592459.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<p>第一个地方把对号去掉，第二个地方把 *.a 那个删除，然后save。<br><img src="http://upload-images.jianshu.io/upload_images/1897259-29092bd0d71d10cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
]]></content>
      <categories>
        <category>CornerStone</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 序列化与反序列化</title>
    <url>/2019/12/26/Flutter%20%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<p>Flutter 序列化与反序列化</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">dependencies:</span><br><span class="line">  json_annotation: ^3.0.0</span><br><span class="line"></span><br><span class="line">dev_dependencies:</span><br><span class="line">  build_runner: ^1.7.0</span><br><span class="line">  json_serializable: ^3.2.3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import &apos;package:json_annotation/json_annotation.dart&apos;;</span><br><span class="line">part &apos;info_model.g.dart&apos;;</span><br><span class="line"></span><br><span class="line">@JsonSerializable()</span><br><span class="line">class Info &#123;</span><br><span class="line">  String name;</span><br><span class="line">  String userid;</span><br><span class="line"></span><br><span class="line">  Info(&#123;</span><br><span class="line">    this.name,</span><br><span class="line">    this.userid,</span><br><span class="line">  &#125;);</span><br><span class="line">  //反序列化</span><br><span class="line">  factory Info.fromJson(Map&lt;String, dynamic&gt; json) &#123;</span><br><span class="line">    return _$InfoFromJson(json);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //序列化</span><br><span class="line">  Map&lt;String, dynamic&gt; toJson() &#123;</span><br><span class="line">    return _$InfoToJson(this);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//一次</span><br><span class="line">flutter pub run build_runner build</span><br><span class="line">//监听</span><br><span class="line">flutter packages pub run build_runner watch</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>操作</tag>
      </tags>
  </entry>
</search>
